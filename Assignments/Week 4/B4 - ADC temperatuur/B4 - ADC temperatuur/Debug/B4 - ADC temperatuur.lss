
B4 - ADC temperatuur.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000008d6  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000a4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005b  00000000  00000000  000008d6  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000088  00000000  00000000  00000931  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   0000125a  00000000  00000000  000009b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000009c1  00000000  00000000  00001c13  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000055a  00000000  00000000  000025d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  0000010c  00000000  00000000  00002b30  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000002a6  00000000  00000000  00002c3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000003db  00000000  00000000  00002ee2  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000068  00000000  00000000  000032bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  0000087e  0000087e  000008d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00003328  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.lcd_strobe_lcd_e 00000026  000007a0  000007a0  000007f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.init_4bits_mode 00000040  00000728  00000728  0000077c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.lcd_write_char 00000024  000007c6  000007c6  0000081a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.lcd_write_command 00000024  000007ea  000007ea  0000083e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.lcd_clear 0000001a  0000082a  0000082a  0000087e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.LCD_init 0000001c  0000080e  0000080e  00000862  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.LCD_display_text 0000001a  00000844  00000844  00000898  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.LCD_set_cursor 00000008  00000876  00000876  000008ca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.adcInit 0000000a  0000086c  0000086c  000008c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .progmemx.data 00000010  000000a4  000000a4  000000f8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 23 .text.main    00000090  000005c0  000005c0  00000614  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.avrlibc 00000060  000006c8  000006c8  0000071c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.avrlibc 00000450  000000b4  000000b4  00000108  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.avrlibc 00000038  00000768  00000768  000007bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.avrlibc 00000078  00000650  00000650  000006a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.avrlibc 000000bc  00000504  00000504  00000558  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.libgcc  0000000e  0000085e  0000085e  000008b2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
   8:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
   c:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  10:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  14:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  18:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  1c:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  20:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  24:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  28:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  2c:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  30:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  34:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  38:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  3c:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  40:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  44:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  48:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  4c:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  50:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  54:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  58:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  5c:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  60:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  64:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  68:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  6c:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  70:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  74:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  78:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  7c:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  80:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  84:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>
  88:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <main>
  9c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <_exit>

000000a0 <_exit>:
  a0:	f8 94       	cli

000000a2 <__stop_program>:
  a2:	ff cf       	rjmp	.-2      	; 0xa2 <__stop_program>

Disassembly of section .text:

0000087e <__bad_interrupt>:
 87e:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.lcd_strobe_lcd_e:

000007a0 <lcd_strobe_lcd_e>:
#define LCD_E 	6  // RA6 UNI-6
#define LCD_RS	4  // RA4 UNI-6

// Locks in a set position by setting E high and low
void lcd_strobe_lcd_e(void) {
	PORTA |= (1<<LCD_E);	// set E high
 7a0:	8b b3       	in	r24, 0x1b	; 27
 7a2:	80 64       	ori	r24, 0x40	; 64
 7a4:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 7a6:	8f ec       	ldi	r24, 0xCF	; 207
 7a8:	97 e0       	ldi	r25, 0x07	; 7
 7aa:	01 97       	sbiw	r24, 0x01	; 1
 7ac:	f1 f7       	brne	.-4      	; 0x7aa <lcd_strobe_lcd_e+0xa>
 7ae:	00 c0       	rjmp	.+0      	; 0x7b0 <lcd_strobe_lcd_e+0x10>
 7b0:	00 00       	nop
	_delay_ms(1);			// Small delay to process
	PORTA &= ~(1<<LCD_E);  	// set E low
 7b2:	8b b3       	in	r24, 0x1b	; 27
 7b4:	8f 7b       	andi	r24, 0xBF	; 191
 7b6:	8b bb       	out	0x1b, r24	; 27
 7b8:	8f ec       	ldi	r24, 0xCF	; 207
 7ba:	97 e0       	ldi	r25, 0x07	; 7
 7bc:	01 97       	sbiw	r24, 0x01	; 1
 7be:	f1 f7       	brne	.-4      	; 0x7bc <lcd_strobe_lcd_e+0x1c>
 7c0:	00 c0       	rjmp	.+0      	; 0x7c2 <lcd_strobe_lcd_e+0x22>
 7c2:	00 00       	nop
 7c4:	08 95       	ret

Disassembly of section .text.init_4bits_mode:

00000728 <init_4bits_mode>:


/*
 * Sets the lcd display to the correct 4 pin mode.
 */
void init_4bits_mode(void) {
 728:	cf 93       	push	r28
	// PORTC output mode and all low (also E and RS pin)
	DDRA = 0xFF;
 72a:	8f ef       	ldi	r24, 0xFF	; 255
 72c:	8a bb       	out	0x1a, r24	; 26
	PORTC = 0x00;
 72e:	15 ba       	out	0x15, r1	; 21
	PORTA = 0x00;
 730:	1b ba       	out	0x1b, r1	; 27
	//PORTA = 0xFF;

	// Step 2 (table 12)
	PORTC = 0x20;	// function set
 732:	c0 e2       	ldi	r28, 0x20	; 32
 734:	c5 bb       	out	0x15, r28	; 21
	lcd_strobe_lcd_e();
 736:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <lcd_strobe_lcd_e>

	// Step 3 (table 12)
	PORTC = 0x20;   // function set
 73a:	c5 bb       	out	0x15, r28	; 21
	lcd_strobe_lcd_e();
 73c:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <lcd_strobe_lcd_e>
	PORTC = 0x80;
 740:	80 e8       	ldi	r24, 0x80	; 128
 742:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 744:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <lcd_strobe_lcd_e>

	// Step 4 (table 12)
	PORTC = 0x00;   // Display on/off control
 748:	15 ba       	out	0x15, r1	; 21
	lcd_strobe_lcd_e();
 74a:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <lcd_strobe_lcd_e>
	PORTC = 0xF0;
 74e:	80 ef       	ldi	r24, 0xF0	; 240
 750:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 752:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <lcd_strobe_lcd_e>

	// Step 4 (table 12)
	PORTC = 0x00;   // Entry mode set
 756:	15 ba       	out	0x15, r1	; 21
	lcd_strobe_lcd_e();
 758:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <lcd_strobe_lcd_e>
	PORTC = 0x60;
 75c:	80 e6       	ldi	r24, 0x60	; 96
 75e:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 760:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <lcd_strobe_lcd_e>
}
 764:	cf 91       	pop	r28
 766:	08 95       	ret

Disassembly of section .text.lcd_write_char:

000007c6 <lcd_write_char>:

// Writes a command to the LCD display
// This by setting RS high
void lcd_write_char(unsigned char byte) {
 7c6:	cf 93       	push	r28
 7c8:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
 7ca:	85 bb       	out	0x15, r24	; 21
	PORTA |= (1<<LCD_RS);
 7cc:	8b b3       	in	r24, 0x1b	; 27
 7ce:	80 61       	ori	r24, 0x10	; 16
 7d0:	8b bb       	out	0x1b, r24	; 27
	lcd_strobe_lcd_e();
 7d2:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <lcd_strobe_lcd_e>

	// Second nibble
	PORTC = (byte<<4);
 7d6:	c2 95       	swap	r28
 7d8:	c0 7f       	andi	r28, 0xF0	; 240
 7da:	c5 bb       	out	0x15, r28	; 21
	PORTA |= (1<<LCD_RS);
 7dc:	8b b3       	in	r24, 0x1b	; 27
 7de:	80 61       	ori	r24, 0x10	; 16
 7e0:	8b bb       	out	0x1b, r24	; 27
	lcd_strobe_lcd_e();
 7e2:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <lcd_strobe_lcd_e>
}
 7e6:	cf 91       	pop	r28
 7e8:	08 95       	ret

Disassembly of section .text.lcd_write_command:

000007ea <lcd_write_command>:


// Writes a command to the LCD display
// This by setting RS low
void lcd_write_command(unsigned char byte) {
 7ea:	cf 93       	push	r28
 7ec:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
 7ee:	85 bb       	out	0x15, r24	; 21
	PORTA &= ~(1<<LCD_RS);
 7f0:	8b b3       	in	r24, 0x1b	; 27
 7f2:	8f 7e       	andi	r24, 0xEF	; 239
 7f4:	8b bb       	out	0x1b, r24	; 27
	lcd_strobe_lcd_e();
 7f6:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <lcd_strobe_lcd_e>

	// Second nibble
	PORTC = (byte<<4);
 7fa:	c2 95       	swap	r28
 7fc:	c0 7f       	andi	r28, 0xF0	; 240
 7fe:	c5 bb       	out	0x15, r28	; 21
	PORTA &= ~(1<<LCD_RS);
 800:	8b b3       	in	r24, 0x1b	; 27
 802:	8f 7e       	andi	r24, 0xEF	; 239
 804:	8b bb       	out	0x1b, r24	; 27
	lcd_strobe_lcd_e();
 806:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <lcd_strobe_lcd_e>
}
 80a:	cf 91       	pop	r28
 80c:	08 95       	ret

Disassembly of section .text.lcd_clear:

0000082a <lcd_clear>:

void lcd_clear() {
	lcd_write_command (0x01); // 0x01 clear the entire display
 82a:	81 e0       	ldi	r24, 0x01	; 1
 82c:	0e 94 f5 03 	call	0x7ea	; 0x7ea <lcd_write_command>
 830:	8f e9       	ldi	r24, 0x9F	; 159
 832:	9f e0       	ldi	r25, 0x0F	; 15
 834:	01 97       	sbiw	r24, 0x01	; 1
 836:	f1 f7       	brne	.-4      	; 0x834 <lcd_clear+0xa>
 838:	00 c0       	rjmp	.+0      	; 0x83a <lcd_clear+0x10>
 83a:	00 00       	nop
	_delay_ms(2);			  // small delay
	lcd_write_command (0x80); // 0x80 moves the cursor to the start
 83c:	80 e8       	ldi	r24, 0x80	; 128
 83e:	0e 94 f5 03 	call	0x7ea	; 0x7ea <lcd_write_command>
 842:	08 95       	ret

Disassembly of section .text.LCD_init:

0000080e <LCD_init>:
* Sets the LCD display to the correct 4 pin mode. Also clears the display before starting
*/
void LCD_init() 
{
		// Setting DDRC to output, these are used in writing data to the LCD
		DDRC = 0xFF;			
 80e:	8f ef       	ldi	r24, 0xFF	; 255
 810:	84 bb       	out	0x14, r24	; 20
		PORTC = 0xFF;
 812:	85 bb       	out	0x15, r24	; 21
		
		// Setting the LCD to use the 4 bit mode
		init_4bits_mode();
 814:	0e 94 94 03 	call	0x728	; 0x728 <init_4bits_mode>
 818:	8f e1       	ldi	r24, 0x1F	; 31
 81a:	9e e4       	ldi	r25, 0x4E	; 78
 81c:	01 97       	sbiw	r24, 0x01	; 1
 81e:	f1 f7       	brne	.-4      	; 0x81c <LCD_init+0xe>
 820:	00 c0       	rjmp	.+0      	; 0x822 <LCD_init+0x14>
 822:	00 00       	nop
		
		// Wait a bit to complete the init
		_delay_ms(10);
		
		// Clearing the LCD
		lcd_clear();
 824:	0e 94 15 04 	call	0x82a	; 0x82a <lcd_clear>
 828:	08 95       	ret

Disassembly of section .text.LCD_display_text:

00000844 <LCD_display_text>:
/*
* Given a string pointer (char array) this method will
* print that text to the display of the LCD
*/
void LCD_display_text(char *str)
{
 844:	cf 93       	push	r28
 846:	df 93       	push	r29
 848:	ec 01       	movw	r28, r24
	// Going until the value in the string pointer is 0
	while (*str) {
 84a:	03 c0       	rjmp	.+6      	; 0x852 <LCD_display_text+0xe>
		// Moving the string pointer by one up
		lcd_write_char(*str++);
 84c:	21 96       	adiw	r28, 0x01	; 1
 84e:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <lcd_write_char>
* print that text to the display of the LCD
*/
void LCD_display_text(char *str)
{
	// Going until the value in the string pointer is 0
	while (*str) {
 852:	88 81       	ld	r24, Y
 854:	81 11       	cpse	r24, r1
 856:	fa cf       	rjmp	.-12     	; 0x84c <LCD_display_text+0x8>
		// Moving the string pointer by one up
		lcd_write_char(*str++);
	}
}
 858:	df 91       	pop	r29
 85a:	cf 91       	pop	r28
 85c:	08 95       	ret

Disassembly of section .text.LCD_set_cursor:

00000876 <LCD_set_cursor>:
*/
void LCD_set_cursor(int position)
{
	// Bit 8 should be 1 to change cursor
	char command = (position | (1<<7));
	lcd_write_command(command);
 876:	80 68       	ori	r24, 0x80	; 128
 878:	0e 94 f5 03 	call	0x7ea	; 0x7ea <lcd_write_command>
 87c:	08 95       	ret

Disassembly of section .text.adcInit:

0000086c <adcInit>:
#include <stdio.h>
#include <util/delay.h>
#include "LCD.h"

void adcInit() {
	ADMUX = 0b11100001;
 86c:	81 ee       	ldi	r24, 0xE1	; 225
 86e:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0b11000110;
 870:	86 ec       	ldi	r24, 0xC6	; 198
 872:	86 b9       	out	0x06, r24	; 6
 874:	08 95       	ret

Disassembly of section .text.main:

000005c0 <main>:
}

int main(void)
{
 5c0:	cf 93       	push	r28
 5c2:	df 93       	push	r29
 5c4:	cd b7       	in	r28, 0x3d	; 61
 5c6:	de b7       	in	r29, 0x3e	; 62
 5c8:	60 97       	sbiw	r28, 0x10	; 16
 5ca:	0f b6       	in	r0, 0x3f	; 63
 5cc:	f8 94       	cli
 5ce:	de bf       	out	0x3e, r29	; 62
 5d0:	0f be       	out	0x3f, r0	; 63
 5d2:	cd bf       	out	0x3d, r28	; 61
	DDRA = 0xFF;
 5d4:	8f ef       	ldi	r24, 0xFF	; 255
 5d6:	8a bb       	out	0x1a, r24	; 26
	DDRF = 0x00;
 5d8:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	adcInit();
 5dc:	0e 94 36 04 	call	0x86c	; 0x86c <adcInit>
 5e0:	2f ef       	ldi	r18, 0xFF	; 255
 5e2:	8e e9       	ldi	r24, 0x9E	; 158
 5e4:	94 e2       	ldi	r25, 0x24	; 36
 5e6:	21 50       	subi	r18, 0x01	; 1
 5e8:	80 40       	sbci	r24, 0x00	; 0
 5ea:	90 40       	sbci	r25, 0x00	; 0
 5ec:	e1 f7       	brne	.-8      	; 0x5e6 <main+0x26>
 5ee:	00 c0       	rjmp	.+0      	; 0x5f0 <main+0x30>
 5f0:	00 00       	nop
	
	_delay_ms(1500);
	LCD_init();
 5f2:	0e 94 07 04 	call	0x80e	; 0x80e <LCD_init>
	
    while(1)
    {
		LCD_set_cursor(0);
 5f6:	80 e0       	ldi	r24, 0x00	; 0
 5f8:	90 e0       	ldi	r25, 0x00	; 0
 5fa:	0e 94 3b 04 	call	0x876	; 0x876 <LCD_set_cursor>
		
		ADCSRA |= (1<<6);
 5fe:	86 b1       	in	r24, 0x06	; 6
 600:	80 64       	ori	r24, 0x40	; 64
 602:	86 b9       	out	0x06, r24	; 6
		while ( ADCSRA & (1<<6)) ;
 604:	36 99       	sbic	0x06, 6	; 6
 606:	fe cf       	rjmp	.-4      	; 0x604 <main+0x44>
		
		char text[16];
		
		PORTA = ADCH;
 608:	85 b1       	in	r24, 0x05	; 5
 60a:	8b bb       	out	0x1b, r24	; 27
		
		sprintf(text, "Temperatuur: %d", ADCH);
 60c:	85 b1       	in	r24, 0x05	; 5
 60e:	1f 92       	push	r1
 610:	8f 93       	push	r24
 612:	84 ea       	ldi	r24, 0xA4	; 164
 614:	90 e0       	ldi	r25, 0x00	; 0
 616:	a0 e0       	ldi	r26, 0x00	; 0
 618:	af 93       	push	r26
 61a:	9f 93       	push	r25
 61c:	8f 93       	push	r24
 61e:	8e 01       	movw	r16, r28
 620:	0f 5f       	subi	r16, 0xFF	; 255
 622:	1f 4f       	sbci	r17, 0xFF	; 255
 624:	1f 93       	push	r17
 626:	0f 93       	push	r16
 628:	0e 94 64 03 	call	0x6c8	; 0x6c8 <sprintf>
		
		LCD_display_text(text);
 62c:	c8 01       	movw	r24, r16
 62e:	0e 94 22 04 	call	0x844	; 0x844 <LCD_display_text>
 632:	2f ef       	ldi	r18, 0xFF	; 255
 634:	84 e3       	ldi	r24, 0x34	; 52
 636:	9c e0       	ldi	r25, 0x0C	; 12
 638:	21 50       	subi	r18, 0x01	; 1
 63a:	80 40       	sbci	r24, 0x00	; 0
 63c:	90 40       	sbci	r25, 0x00	; 0
 63e:	e1 f7       	brne	.-8      	; 0x638 <main+0x78>
 640:	00 c0       	rjmp	.+0      	; 0x642 <main+0x82>
 642:	00 00       	nop
		_delay_ms(500);
    }
 644:	0f b6       	in	r0, 0x3f	; 63
 646:	f8 94       	cli
 648:	de bf       	out	0x3e, r29	; 62
 64a:	0f be       	out	0x3f, r0	; 63
 64c:	cd bf       	out	0x3d, r28	; 61
 64e:	d3 cf       	rjmp	.-90     	; 0x5f6 <main+0x36>

Disassembly of section .text.avrlibc:

000006c8 <sprintf>:
 6c8:	0f 93       	push	r16
 6ca:	1f 93       	push	r17
 6cc:	cf 93       	push	r28
 6ce:	df 93       	push	r29
 6d0:	cd b7       	in	r28, 0x3d	; 61
 6d2:	de b7       	in	r29, 0x3e	; 62
 6d4:	2f 97       	sbiw	r28, 0x0f	; 15
 6d6:	0f b6       	in	r0, 0x3f	; 63
 6d8:	f8 94       	cli
 6da:	de bf       	out	0x3e, r29	; 62
 6dc:	0f be       	out	0x3f, r0	; 63
 6de:	cd bf       	out	0x3d, r28	; 61
 6e0:	0e 89       	ldd	r16, Y+22	; 0x16
 6e2:	1f 89       	ldd	r17, Y+23	; 0x17
 6e4:	86 e0       	ldi	r24, 0x06	; 6
 6e6:	8d 83       	std	Y+5, r24	; 0x05
 6e8:	1a 83       	std	Y+2, r17	; 0x02
 6ea:	09 83       	std	Y+1, r16	; 0x01
 6ec:	8f ef       	ldi	r24, 0xFF	; 255
 6ee:	9f e7       	ldi	r25, 0x7F	; 127
 6f0:	9f 83       	std	Y+7, r25	; 0x07
 6f2:	8e 83       	std	Y+6, r24	; 0x06
 6f4:	9e 01       	movw	r18, r28
 6f6:	25 5e       	subi	r18, 0xE5	; 229
 6f8:	3f 4f       	sbci	r19, 0xFF	; 255
 6fa:	48 8d       	ldd	r20, Y+24	; 0x18
 6fc:	59 8d       	ldd	r21, Y+25	; 0x19
 6fe:	6a 8d       	ldd	r22, Y+26	; 0x1a
 700:	ce 01       	movw	r24, r28
 702:	01 96       	adiw	r24, 0x01	; 1
 704:	0e 94 5a 00 	call	0xb4	; 0xb4 <vfprintf>
 708:	e8 85       	ldd	r30, Y+8	; 0x08
 70a:	f9 85       	ldd	r31, Y+9	; 0x09
 70c:	e0 0f       	add	r30, r16
 70e:	f1 1f       	adc	r31, r17
 710:	10 82       	st	Z, r1
 712:	2f 96       	adiw	r28, 0x0f	; 15
 714:	0f b6       	in	r0, 0x3f	; 63
 716:	f8 94       	cli
 718:	de bf       	out	0x3e, r29	; 62
 71a:	0f be       	out	0x3f, r0	; 63
 71c:	cd bf       	out	0x3d, r28	; 61
 71e:	df 91       	pop	r29
 720:	cf 91       	pop	r28
 722:	1f 91       	pop	r17
 724:	0f 91       	pop	r16
 726:	08 95       	ret

Disassembly of section .text.avrlibc:

000000b4 <vfprintf>:
  b4:	2f 92       	push	r2
  b6:	3f 92       	push	r3
  b8:	4f 92       	push	r4
  ba:	6f 92       	push	r6
  bc:	7f 92       	push	r7
  be:	8f 92       	push	r8
  c0:	9f 92       	push	r9
  c2:	af 92       	push	r10
  c4:	bf 92       	push	r11
  c6:	cf 92       	push	r12
  c8:	df 92       	push	r13
  ca:	ef 92       	push	r14
  cc:	ff 92       	push	r15
  ce:	0f 93       	push	r16
  d0:	1f 93       	push	r17
  d2:	cf 93       	push	r28
  d4:	df 93       	push	r29
  d6:	cd b7       	in	r28, 0x3d	; 61
  d8:	de b7       	in	r29, 0x3e	; 62
  da:	62 97       	sbiw	r28, 0x12	; 18
  dc:	0f b6       	in	r0, 0x3f	; 63
  de:	f8 94       	cli
  e0:	de bf       	out	0x3e, r29	; 62
  e2:	0f be       	out	0x3f, r0	; 63
  e4:	cd bf       	out	0x3d, r28	; 61
  e6:	6c 01       	movw	r12, r24
  e8:	3a 01       	movw	r6, r20
  ea:	86 2e       	mov	r8, r22
  ec:	79 01       	movw	r14, r18
  ee:	fc 01       	movw	r30, r24
  f0:	10 86       	std	Z+8, r1	; 0x08
  f2:	17 82       	std	Z+7, r1	; 0x07
  f4:	84 81       	ldd	r24, Z+4	; 0x04
  f6:	81 ff       	sbrs	r24, 1
  f8:	eb c1       	rjmp	.+982    	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
  fa:	9e 01       	movw	r18, r28
  fc:	2f 5f       	subi	r18, 0xFF	; 255
  fe:	3f 4f       	sbci	r19, 0xFF	; 255
 100:	3d 87       	std	Y+13, r19	; 0x0d
 102:	2c 87       	std	Y+12, r18	; 0x0c
 104:	c9 01       	movw	r24, r18
 106:	a0 e8       	ldi	r26, 0x80	; 128
 108:	88 8b       	std	Y+16, r24	; 0x10
 10a:	99 8b       	std	Y+17, r25	; 0x11
 10c:	aa 8b       	std	Y+18, r26	; 0x12
 10e:	9f e3       	ldi	r25, 0x3F	; 63
 110:	99 2e       	mov	r9, r25
 112:	f3 01       	movw	r30, r6
 114:	58 2d       	mov	r21, r8
 116:	0e 94 2f 04 	call	0x85e	; 0x85e <__xload_1>
 11a:	86 2f       	mov	r24, r22
 11c:	66 23       	and	r22, r22
 11e:	09 f4       	brne	.+2      	; 0x122 <vfprintf+0x6e>
 120:	d3 c1       	rjmp	.+934    	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 122:	48 2d       	mov	r20, r8
 124:	93 01       	movw	r18, r6
 126:	2f 5f       	subi	r18, 0xFF	; 255
 128:	3f 4f       	sbci	r19, 0xFF	; 255
 12a:	4f 4f       	sbci	r20, 0xFF	; 255
 12c:	65 32       	cpi	r22, 0x25	; 37
 12e:	19 f0       	breq	.+6      	; 0x136 <vfprintf+0x82>
 130:	39 01       	movw	r6, r18
 132:	84 2e       	mov	r8, r20
 134:	0b c0       	rjmp	.+22     	; 0x14c <vfprintf+0x98>
 136:	f9 01       	movw	r30, r18
 138:	54 2f       	mov	r21, r20
 13a:	0e 94 2f 04 	call	0x85e	; 0x85e <__xload_1>
 13e:	86 2f       	mov	r24, r22
 140:	92 e0       	ldi	r25, 0x02	; 2
 142:	69 0e       	add	r6, r25
 144:	71 1c       	adc	r7, r1
 146:	81 1c       	adc	r8, r1
 148:	65 32       	cpi	r22, 0x25	; 37
 14a:	29 f4       	brne	.+10     	; 0x156 <vfprintf+0xa2>
 14c:	b6 01       	movw	r22, r12
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	0e 94 28 03 	call	0x650	; 0x650 <fputc>
 154:	de cf       	rjmp	.-68     	; 0x112 <vfprintf+0x5e>
 156:	b1 2c       	mov	r11, r1
 158:	00 e0       	ldi	r16, 0x00	; 0
 15a:	10 e0       	ldi	r17, 0x00	; 0
 15c:	10 32       	cpi	r17, 0x20	; 32
 15e:	a0 f4       	brcc	.+40     	; 0x188 <vfprintf+0xd4>
 160:	8b 32       	cpi	r24, 0x2B	; 43
 162:	69 f0       	breq	.+26     	; 0x17e <vfprintf+0xca>
 164:	30 f4       	brcc	.+12     	; 0x172 <vfprintf+0xbe>
 166:	80 32       	cpi	r24, 0x20	; 32
 168:	59 f0       	breq	.+22     	; 0x180 <vfprintf+0xcc>
 16a:	83 32       	cpi	r24, 0x23	; 35
 16c:	69 f4       	brne	.+26     	; 0x188 <vfprintf+0xd4>
 16e:	10 61       	ori	r17, 0x10	; 16
 170:	2c c0       	rjmp	.+88     	; 0x1ca <vfprintf+0x116>
 172:	8d 32       	cpi	r24, 0x2D	; 45
 174:	39 f0       	breq	.+14     	; 0x184 <vfprintf+0xd0>
 176:	80 33       	cpi	r24, 0x30	; 48
 178:	39 f4       	brne	.+14     	; 0x188 <vfprintf+0xd4>
 17a:	11 60       	ori	r17, 0x01	; 1
 17c:	26 c0       	rjmp	.+76     	; 0x1ca <vfprintf+0x116>
 17e:	12 60       	ori	r17, 0x02	; 2
 180:	14 60       	ori	r17, 0x04	; 4
 182:	23 c0       	rjmp	.+70     	; 0x1ca <vfprintf+0x116>
 184:	18 60       	ori	r17, 0x08	; 8
 186:	21 c0       	rjmp	.+66     	; 0x1ca <vfprintf+0x116>
 188:	17 fd       	sbrc	r17, 7
 18a:	2a c0       	rjmp	.+84     	; 0x1e0 <vfprintf+0x12c>
 18c:	90 ed       	ldi	r25, 0xD0	; 208
 18e:	98 0f       	add	r25, r24
 190:	9a 30       	cpi	r25, 0x0A	; 10
 192:	78 f4       	brcc	.+30     	; 0x1b2 <vfprintf+0xfe>
 194:	16 ff       	sbrs	r17, 6
 196:	06 c0       	rjmp	.+12     	; 0x1a4 <vfprintf+0xf0>
 198:	aa e0       	ldi	r26, 0x0A	; 10
 19a:	ba 9e       	mul	r11, r26
 19c:	90 0d       	add	r25, r0
 19e:	11 24       	eor	r1, r1
 1a0:	b9 2e       	mov	r11, r25
 1a2:	13 c0       	rjmp	.+38     	; 0x1ca <vfprintf+0x116>
 1a4:	ea e0       	ldi	r30, 0x0A	; 10
 1a6:	0e 9f       	mul	r16, r30
 1a8:	90 0d       	add	r25, r0
 1aa:	11 24       	eor	r1, r1
 1ac:	09 2f       	mov	r16, r25
 1ae:	10 62       	ori	r17, 0x20	; 32
 1b0:	0c c0       	rjmp	.+24     	; 0x1ca <vfprintf+0x116>
 1b2:	8e 32       	cpi	r24, 0x2E	; 46
 1b4:	21 f4       	brne	.+8      	; 0x1be <vfprintf+0x10a>
 1b6:	16 fd       	sbrc	r17, 6
 1b8:	87 c1       	rjmp	.+782    	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 1ba:	10 64       	ori	r17, 0x40	; 64
 1bc:	06 c0       	rjmp	.+12     	; 0x1ca <vfprintf+0x116>
 1be:	8c 36       	cpi	r24, 0x6C	; 108
 1c0:	11 f4       	brne	.+4      	; 0x1c6 <vfprintf+0x112>
 1c2:	10 68       	ori	r17, 0x80	; 128
 1c4:	02 c0       	rjmp	.+4      	; 0x1ca <vfprintf+0x116>
 1c6:	88 36       	cpi	r24, 0x68	; 104
 1c8:	59 f4       	brne	.+22     	; 0x1e0 <vfprintf+0x12c>
 1ca:	f3 01       	movw	r30, r6
 1cc:	58 2d       	mov	r21, r8
 1ce:	0e 94 2f 04 	call	0x85e	; 0x85e <__xload_1>
 1d2:	86 2f       	mov	r24, r22
 1d4:	ff ef       	ldi	r31, 0xFF	; 255
 1d6:	6f 1a       	sub	r6, r31
 1d8:	7f 0a       	sbc	r7, r31
 1da:	8f 0a       	sbc	r8, r31
 1dc:	61 11       	cpse	r22, r1
 1de:	be cf       	rjmp	.-132    	; 0x15c <vfprintf+0xa8>
 1e0:	98 2f       	mov	r25, r24
 1e2:	9f 7d       	andi	r25, 0xDF	; 223
 1e4:	95 54       	subi	r25, 0x45	; 69
 1e6:	93 30       	cpi	r25, 0x03	; 3
 1e8:	28 f4       	brcc	.+10     	; 0x1f4 <vfprintf+0x140>
 1ea:	24 e0       	ldi	r18, 0x04	; 4
 1ec:	e2 0e       	add	r14, r18
 1ee:	f1 1c       	adc	r15, r1
 1f0:	99 82       	std	Y+1, r9	; 0x01
 1f2:	0f c0       	rjmp	.+30     	; 0x212 <vfprintf+0x15e>
 1f4:	83 36       	cpi	r24, 0x63	; 99
 1f6:	31 f0       	breq	.+12     	; 0x204 <vfprintf+0x150>
 1f8:	83 37       	cpi	r24, 0x73	; 115
 1fa:	91 f0       	breq	.+36     	; 0x220 <vfprintf+0x16c>
 1fc:	83 35       	cpi	r24, 0x53	; 83
 1fe:	09 f0       	breq	.+2      	; 0x202 <vfprintf+0x14e>
 200:	64 c0       	rjmp	.+200    	; 0x2ca <vfprintf+0x216>
 202:	27 c0       	rjmp	.+78     	; 0x252 <vfprintf+0x19e>
 204:	f7 01       	movw	r30, r14
 206:	80 81       	ld	r24, Z
 208:	89 83       	std	Y+1, r24	; 0x01
 20a:	97 01       	movw	r18, r14
 20c:	2e 5f       	subi	r18, 0xFE	; 254
 20e:	3f 4f       	sbci	r19, 0xFF	; 255
 210:	79 01       	movw	r14, r18
 212:	28 88       	ldd	r2, Y+16	; 0x10
 214:	39 88       	ldd	r3, Y+17	; 0x11
 216:	4a 88       	ldd	r4, Y+18	; 0x12
 218:	aa 24       	eor	r10, r10
 21a:	a3 94       	inc	r10
 21c:	b1 2c       	mov	r11, r1
 21e:	17 c0       	rjmp	.+46     	; 0x24e <vfprintf+0x19a>
 220:	a7 01       	movw	r20, r14
 222:	4d 5f       	subi	r20, 0xFD	; 253
 224:	5f 4f       	sbci	r21, 0xFF	; 255
 226:	5f 87       	std	Y+15, r21	; 0x0f
 228:	4e 87       	std	Y+14, r20	; 0x0e
 22a:	f7 01       	movw	r30, r14
 22c:	20 80       	ld	r2, Z
 22e:	31 80       	ldd	r3, Z+1	; 0x01
 230:	42 80       	ldd	r4, Z+2	; 0x02
 232:	16 ff       	sbrs	r17, 6
 234:	03 c0       	rjmp	.+6      	; 0x23c <vfprintf+0x188>
 236:	4b 2d       	mov	r20, r11
 238:	50 e0       	ldi	r21, 0x00	; 0
 23a:	02 c0       	rjmp	.+4      	; 0x240 <vfprintf+0x18c>
 23c:	4f ef       	ldi	r20, 0xFF	; 255
 23e:	5f ef       	ldi	r21, 0xFF	; 255
 240:	84 2d       	mov	r24, r4
 242:	b1 01       	movw	r22, r2
 244:	0e 94 b4 03 	call	0x768	; 0x768 <strnlen>
 248:	5c 01       	movw	r10, r24
 24a:	ee 84       	ldd	r14, Y+14	; 0x0e
 24c:	ff 84       	ldd	r15, Y+15	; 0x0f
 24e:	1f 77       	andi	r17, 0x7F	; 127
 250:	18 c0       	rjmp	.+48     	; 0x282 <vfprintf+0x1ce>
 252:	97 01       	movw	r18, r14
 254:	2d 5f       	subi	r18, 0xFD	; 253
 256:	3f 4f       	sbci	r19, 0xFF	; 255
 258:	3f 87       	std	Y+15, r19	; 0x0f
 25a:	2e 87       	std	Y+14, r18	; 0x0e
 25c:	f7 01       	movw	r30, r14
 25e:	20 80       	ld	r2, Z
 260:	31 80       	ldd	r3, Z+1	; 0x01
 262:	42 80       	ldd	r4, Z+2	; 0x02
 264:	16 ff       	sbrs	r17, 6
 266:	03 c0       	rjmp	.+6      	; 0x26e <vfprintf+0x1ba>
 268:	4b 2d       	mov	r20, r11
 26a:	50 e0       	ldi	r21, 0x00	; 0
 26c:	02 c0       	rjmp	.+4      	; 0x272 <vfprintf+0x1be>
 26e:	4f ef       	ldi	r20, 0xFF	; 255
 270:	5f ef       	ldi	r21, 0xFF	; 255
 272:	84 2d       	mov	r24, r4
 274:	b1 01       	movw	r22, r2
 276:	0e 94 b4 03 	call	0x768	; 0x768 <strnlen>
 27a:	5c 01       	movw	r10, r24
 27c:	10 68       	ori	r17, 0x80	; 128
 27e:	ee 84       	ldd	r14, Y+14	; 0x0e
 280:	ff 84       	ldd	r15, Y+15	; 0x0f
 282:	13 fd       	sbrc	r17, 3
 284:	1e c0       	rjmp	.+60     	; 0x2c2 <vfprintf+0x20e>
 286:	80 2f       	mov	r24, r16
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	a8 16       	cp	r10, r24
 28c:	b9 06       	cpc	r11, r25
 28e:	c8 f4       	brcc	.+50     	; 0x2c2 <vfprintf+0x20e>
 290:	b6 01       	movw	r22, r12
 292:	80 e2       	ldi	r24, 0x20	; 32
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	0e 94 28 03 	call	0x650	; 0x650 <fputc>
 29a:	01 50       	subi	r16, 0x01	; 1
 29c:	f4 cf       	rjmp	.-24     	; 0x286 <vfprintf+0x1d2>
 29e:	f1 01       	movw	r30, r2
 2a0:	54 2d       	mov	r21, r4
 2a2:	0e 94 2f 04 	call	0x85e	; 0x85e <__xload_1>
 2a6:	86 2f       	mov	r24, r22
 2a8:	ff ef       	ldi	r31, 0xFF	; 255
 2aa:	2f 1a       	sub	r2, r31
 2ac:	3f 0a       	sbc	r3, r31
 2ae:	4f 0a       	sbc	r4, r31
 2b0:	b6 01       	movw	r22, r12
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	0e 94 28 03 	call	0x650	; 0x650 <fputc>
 2b8:	01 11       	cpse	r16, r1
 2ba:	01 50       	subi	r16, 0x01	; 1
 2bc:	21 e0       	ldi	r18, 0x01	; 1
 2be:	a2 1a       	sub	r10, r18
 2c0:	b1 08       	sbc	r11, r1
 2c2:	a1 14       	cp	r10, r1
 2c4:	b1 04       	cpc	r11, r1
 2c6:	59 f7       	brne	.-42     	; 0x29e <vfprintf+0x1ea>
 2c8:	f5 c0       	rjmp	.+490    	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 2ca:	84 36       	cpi	r24, 0x64	; 100
 2cc:	11 f0       	breq	.+4      	; 0x2d2 <vfprintf+0x21e>
 2ce:	89 36       	cpi	r24, 0x69	; 105
 2d0:	71 f5       	brne	.+92     	; 0x32e <vfprintf+0x27a>
 2d2:	f7 01       	movw	r30, r14
 2d4:	17 ff       	sbrs	r17, 7
 2d6:	08 c0       	rjmp	.+16     	; 0x2e8 <vfprintf+0x234>
 2d8:	60 81       	ld	r22, Z
 2da:	71 81       	ldd	r23, Z+1	; 0x01
 2dc:	82 81       	ldd	r24, Z+2	; 0x02
 2de:	93 81       	ldd	r25, Z+3	; 0x03
 2e0:	97 01       	movw	r18, r14
 2e2:	2c 5f       	subi	r18, 0xFC	; 252
 2e4:	3f 4f       	sbci	r19, 0xFF	; 255
 2e6:	09 c0       	rjmp	.+18     	; 0x2fa <vfprintf+0x246>
 2e8:	60 81       	ld	r22, Z
 2ea:	71 81       	ldd	r23, Z+1	; 0x01
 2ec:	07 2e       	mov	r0, r23
 2ee:	00 0c       	add	r0, r0
 2f0:	88 0b       	sbc	r24, r24
 2f2:	99 0b       	sbc	r25, r25
 2f4:	97 01       	movw	r18, r14
 2f6:	2e 5f       	subi	r18, 0xFE	; 254
 2f8:	3f 4f       	sbci	r19, 0xFF	; 255
 2fa:	79 01       	movw	r14, r18
 2fc:	1f 76       	andi	r17, 0x6F	; 111
 2fe:	31 2e       	mov	r3, r17
 300:	97 ff       	sbrs	r25, 7
 302:	0a c0       	rjmp	.+20     	; 0x318 <vfprintf+0x264>
 304:	90 95       	com	r25
 306:	80 95       	com	r24
 308:	70 95       	com	r23
 30a:	61 95       	neg	r22
 30c:	7f 4f       	sbci	r23, 0xFF	; 255
 30e:	8f 4f       	sbci	r24, 0xFF	; 255
 310:	9f 4f       	sbci	r25, 0xFF	; 255
 312:	31 2f       	mov	r19, r17
 314:	30 68       	ori	r19, 0x80	; 128
 316:	33 2e       	mov	r3, r19
 318:	2a e0       	ldi	r18, 0x0A	; 10
 31a:	30 e0       	ldi	r19, 0x00	; 0
 31c:	ae 01       	movw	r20, r28
 31e:	4f 5f       	subi	r20, 0xFF	; 255
 320:	5f 4f       	sbci	r21, 0xFF	; 255
 322:	0e 94 82 02 	call	0x504	; 0x504 <__ultoa_invert>
 326:	48 2e       	mov	r4, r24
 328:	4c 85       	ldd	r20, Y+12	; 0x0c
 32a:	44 1a       	sub	r4, r20
 32c:	4a c0       	rjmp	.+148    	; 0x3c2 <vfprintf+0x30e>
 32e:	85 37       	cpi	r24, 0x75	; 117
 330:	29 f4       	brne	.+10     	; 0x33c <vfprintf+0x288>
 332:	1f 7e       	andi	r17, 0xEF	; 239
 334:	a1 2e       	mov	r10, r17
 336:	2a e0       	ldi	r18, 0x0A	; 10
 338:	30 e0       	ldi	r19, 0x00	; 0
 33a:	25 c0       	rjmp	.+74     	; 0x386 <vfprintf+0x2d2>
 33c:	51 2f       	mov	r21, r17
 33e:	59 7f       	andi	r21, 0xF9	; 249
 340:	a5 2e       	mov	r10, r21
 342:	8f 36       	cpi	r24, 0x6F	; 111
 344:	c1 f0       	breq	.+48     	; 0x376 <vfprintf+0x2c2>
 346:	18 f4       	brcc	.+6      	; 0x34e <vfprintf+0x29a>
 348:	88 35       	cpi	r24, 0x58	; 88
 34a:	79 f0       	breq	.+30     	; 0x36a <vfprintf+0x2b6>
 34c:	bd c0       	rjmp	.+378    	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 34e:	80 37       	cpi	r24, 0x70	; 112
 350:	19 f0       	breq	.+6      	; 0x358 <vfprintf+0x2a4>
 352:	88 37       	cpi	r24, 0x78	; 120
 354:	21 f0       	breq	.+8      	; 0x35e <vfprintf+0x2aa>
 356:	b8 c0       	rjmp	.+368    	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 358:	85 2f       	mov	r24, r21
 35a:	80 61       	ori	r24, 0x10	; 16
 35c:	a8 2e       	mov	r10, r24
 35e:	a4 fe       	sbrs	r10, 4
 360:	0d c0       	rjmp	.+26     	; 0x37c <vfprintf+0x2c8>
 362:	9a 2d       	mov	r25, r10
 364:	94 60       	ori	r25, 0x04	; 4
 366:	a9 2e       	mov	r10, r25
 368:	09 c0       	rjmp	.+18     	; 0x37c <vfprintf+0x2c8>
 36a:	14 ff       	sbrs	r17, 4
 36c:	0a c0       	rjmp	.+20     	; 0x382 <vfprintf+0x2ce>
 36e:	a5 2f       	mov	r26, r21
 370:	a6 60       	ori	r26, 0x06	; 6
 372:	aa 2e       	mov	r10, r26
 374:	06 c0       	rjmp	.+12     	; 0x382 <vfprintf+0x2ce>
 376:	28 e0       	ldi	r18, 0x08	; 8
 378:	30 e0       	ldi	r19, 0x00	; 0
 37a:	05 c0       	rjmp	.+10     	; 0x386 <vfprintf+0x2d2>
 37c:	20 e1       	ldi	r18, 0x10	; 16
 37e:	30 e0       	ldi	r19, 0x00	; 0
 380:	02 c0       	rjmp	.+4      	; 0x386 <vfprintf+0x2d2>
 382:	20 e1       	ldi	r18, 0x10	; 16
 384:	32 e0       	ldi	r19, 0x02	; 2
 386:	f7 01       	movw	r30, r14
 388:	a7 fe       	sbrs	r10, 7
 38a:	08 c0       	rjmp	.+16     	; 0x39c <vfprintf+0x2e8>
 38c:	60 81       	ld	r22, Z
 38e:	71 81       	ldd	r23, Z+1	; 0x01
 390:	82 81       	ldd	r24, Z+2	; 0x02
 392:	93 81       	ldd	r25, Z+3	; 0x03
 394:	a7 01       	movw	r20, r14
 396:	4c 5f       	subi	r20, 0xFC	; 252
 398:	5f 4f       	sbci	r21, 0xFF	; 255
 39a:	07 c0       	rjmp	.+14     	; 0x3aa <vfprintf+0x2f6>
 39c:	60 81       	ld	r22, Z
 39e:	71 81       	ldd	r23, Z+1	; 0x01
 3a0:	80 e0       	ldi	r24, 0x00	; 0
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	a7 01       	movw	r20, r14
 3a6:	4e 5f       	subi	r20, 0xFE	; 254
 3a8:	5f 4f       	sbci	r21, 0xFF	; 255
 3aa:	7a 01       	movw	r14, r20
 3ac:	ae 01       	movw	r20, r28
 3ae:	4f 5f       	subi	r20, 0xFF	; 255
 3b0:	5f 4f       	sbci	r21, 0xFF	; 255
 3b2:	0e 94 82 02 	call	0x504	; 0x504 <__ultoa_invert>
 3b6:	48 2e       	mov	r4, r24
 3b8:	5c 85       	ldd	r21, Y+12	; 0x0c
 3ba:	45 1a       	sub	r4, r21
 3bc:	8a 2d       	mov	r24, r10
 3be:	8f 77       	andi	r24, 0x7F	; 127
 3c0:	38 2e       	mov	r3, r24
 3c2:	36 fe       	sbrs	r3, 6
 3c4:	0d c0       	rjmp	.+26     	; 0x3e0 <vfprintf+0x32c>
 3c6:	93 2d       	mov	r25, r3
 3c8:	9e 7f       	andi	r25, 0xFE	; 254
 3ca:	a9 2e       	mov	r10, r25
 3cc:	4b 14       	cp	r4, r11
 3ce:	58 f4       	brcc	.+22     	; 0x3e6 <vfprintf+0x332>
 3d0:	34 fe       	sbrs	r3, 4
 3d2:	0b c0       	rjmp	.+22     	; 0x3ea <vfprintf+0x336>
 3d4:	32 fc       	sbrc	r3, 2
 3d6:	09 c0       	rjmp	.+18     	; 0x3ea <vfprintf+0x336>
 3d8:	a3 2d       	mov	r26, r3
 3da:	ae 7e       	andi	r26, 0xEE	; 238
 3dc:	aa 2e       	mov	r10, r26
 3de:	05 c0       	rjmp	.+10     	; 0x3ea <vfprintf+0x336>
 3e0:	14 2d       	mov	r17, r4
 3e2:	a3 2c       	mov	r10, r3
 3e4:	03 c0       	rjmp	.+6      	; 0x3ec <vfprintf+0x338>
 3e6:	14 2d       	mov	r17, r4
 3e8:	01 c0       	rjmp	.+2      	; 0x3ec <vfprintf+0x338>
 3ea:	1b 2d       	mov	r17, r11
 3ec:	a4 fe       	sbrs	r10, 4
 3ee:	0e c0       	rjmp	.+28     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3f0:	fe 01       	movw	r30, r28
 3f2:	e4 0d       	add	r30, r4
 3f4:	f1 1d       	adc	r31, r1
 3f6:	80 81       	ld	r24, Z
 3f8:	80 33       	cpi	r24, 0x30	; 48
 3fa:	21 f4       	brne	.+8      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3fc:	ea 2d       	mov	r30, r10
 3fe:	e9 7e       	andi	r30, 0xE9	; 233
 400:	ae 2e       	mov	r10, r30
 402:	08 c0       	rjmp	.+16     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 404:	a2 fe       	sbrs	r10, 2
 406:	05 c0       	rjmp	.+10     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 408:	1e 5f       	subi	r17, 0xFE	; 254
 40a:	04 c0       	rjmp	.+8      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 40c:	8a 2d       	mov	r24, r10
 40e:	86 78       	andi	r24, 0x86	; 134
 410:	09 f0       	breq	.+2      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 412:	1f 5f       	subi	r17, 0xFF	; 255
 414:	a3 fc       	sbrc	r10, 3
 416:	11 c0       	rjmp	.+34     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 418:	a0 fe       	sbrs	r10, 0
 41a:	06 c0       	rjmp	.+12     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 41c:	10 17       	cp	r17, r16
 41e:	88 f4       	brcc	.+34     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 420:	04 0d       	add	r16, r4
 422:	b0 2e       	mov	r11, r16
 424:	b1 1a       	sub	r11, r17
 426:	0e c0       	rjmp	.+28     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 428:	10 17       	cp	r17, r16
 42a:	60 f4       	brcc	.+24     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 42c:	b6 01       	movw	r22, r12
 42e:	80 e2       	ldi	r24, 0x20	; 32
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	0e 94 28 03 	call	0x650	; 0x650 <fputc>
 436:	1f 5f       	subi	r17, 0xFF	; 255
 438:	f7 cf       	rjmp	.-18     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 43a:	10 17       	cp	r17, r16
 43c:	18 f4       	brcc	.+6      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 43e:	01 1b       	sub	r16, r17
 440:	02 c0       	rjmp	.+4      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 442:	b4 2c       	mov	r11, r4
 444:	00 e0       	ldi	r16, 0x00	; 0
 446:	a4 fe       	sbrs	r10, 4
 448:	10 c0       	rjmp	.+32     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 44a:	b6 01       	movw	r22, r12
 44c:	80 e3       	ldi	r24, 0x30	; 48
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	0e 94 28 03 	call	0x650	; 0x650 <fputc>
 454:	a2 fe       	sbrs	r10, 2
 456:	17 c0       	rjmp	.+46     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 458:	a1 fc       	sbrc	r10, 1
 45a:	03 c0       	rjmp	.+6      	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 45c:	88 e7       	ldi	r24, 0x78	; 120
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	02 c0       	rjmp	.+4      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 462:	88 e5       	ldi	r24, 0x58	; 88
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	b6 01       	movw	r22, r12
 468:	0c c0       	rjmp	.+24     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 46a:	8a 2d       	mov	r24, r10
 46c:	86 78       	andi	r24, 0x86	; 134
 46e:	59 f0       	breq	.+22     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 470:	a1 fe       	sbrs	r10, 1
 472:	02 c0       	rjmp	.+4      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 474:	8b e2       	ldi	r24, 0x2B	; 43
 476:	01 c0       	rjmp	.+2      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 478:	80 e2       	ldi	r24, 0x20	; 32
 47a:	a7 fc       	sbrc	r10, 7
 47c:	8d e2       	ldi	r24, 0x2D	; 45
 47e:	b6 01       	movw	r22, r12
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	0e 94 28 03 	call	0x650	; 0x650 <fputc>
 486:	4b 14       	cp	r4, r11
 488:	38 f4       	brcc	.+14     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 48a:	b6 01       	movw	r22, r12
 48c:	80 e3       	ldi	r24, 0x30	; 48
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	0e 94 28 03 	call	0x650	; 0x650 <fputc>
 494:	ba 94       	dec	r11
 496:	f7 cf       	rjmp	.-18     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 498:	4a 94       	dec	r4
 49a:	e1 e0       	ldi	r30, 0x01	; 1
 49c:	f0 e0       	ldi	r31, 0x00	; 0
 49e:	ec 0f       	add	r30, r28
 4a0:	fd 1f       	adc	r31, r29
 4a2:	e4 0d       	add	r30, r4
 4a4:	f1 1d       	adc	r31, r1
 4a6:	80 81       	ld	r24, Z
 4a8:	b6 01       	movw	r22, r12
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	0e 94 28 03 	call	0x650	; 0x650 <fputc>
 4b0:	41 10       	cpse	r4, r1
 4b2:	f2 cf       	rjmp	.-28     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 4b4:	00 23       	and	r16, r16
 4b6:	09 f4       	brne	.+2      	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4b8:	2c ce       	rjmp	.-936    	; 0x112 <vfprintf+0x5e>
 4ba:	b6 01       	movw	r22, r12
 4bc:	80 e2       	ldi	r24, 0x20	; 32
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	0e 94 28 03 	call	0x650	; 0x650 <fputc>
 4c4:	01 50       	subi	r16, 0x01	; 1
 4c6:	f6 cf       	rjmp	.-20     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 4c8:	f6 01       	movw	r30, r12
 4ca:	87 81       	ldd	r24, Z+7	; 0x07
 4cc:	90 85       	ldd	r25, Z+8	; 0x08
 4ce:	02 c0       	rjmp	.+4      	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4d0:	8f ef       	ldi	r24, 0xFF	; 255
 4d2:	9f ef       	ldi	r25, 0xFF	; 255
 4d4:	62 96       	adiw	r28, 0x12	; 18
 4d6:	0f b6       	in	r0, 0x3f	; 63
 4d8:	f8 94       	cli
 4da:	de bf       	out	0x3e, r29	; 62
 4dc:	0f be       	out	0x3f, r0	; 63
 4de:	cd bf       	out	0x3d, r28	; 61
 4e0:	df 91       	pop	r29
 4e2:	cf 91       	pop	r28
 4e4:	1f 91       	pop	r17
 4e6:	0f 91       	pop	r16
 4e8:	ff 90       	pop	r15
 4ea:	ef 90       	pop	r14
 4ec:	df 90       	pop	r13
 4ee:	cf 90       	pop	r12
 4f0:	bf 90       	pop	r11
 4f2:	af 90       	pop	r10
 4f4:	9f 90       	pop	r9
 4f6:	8f 90       	pop	r8
 4f8:	7f 90       	pop	r7
 4fa:	6f 90       	pop	r6
 4fc:	4f 90       	pop	r4
 4fe:	3f 90       	pop	r3
 500:	2f 90       	pop	r2
 502:	08 95       	ret

Disassembly of section .text.avrlibc:

00000768 <strnlen>:
 768:	cf 92       	push	r12
 76a:	df 92       	push	r13
 76c:	ef 92       	push	r14
 76e:	6b 01       	movw	r12, r22
 770:	e8 2e       	mov	r14, r24
 772:	9a 01       	movw	r18, r20
 774:	a8 2f       	mov	r26, r24
 776:	cb 01       	movw	r24, r22
 778:	21 15       	cp	r18, r1
 77a:	31 05       	cpc	r19, r1
 77c:	31 f4       	brne	.+12     	; 0x78a <strnlen+0x22>
 77e:	8c 19       	sub	r24, r12
 780:	9d 09       	sbc	r25, r13
 782:	ef 90       	pop	r14
 784:	df 90       	pop	r13
 786:	cf 90       	pop	r12
 788:	08 95       	ret
 78a:	fc 01       	movw	r30, r24
 78c:	5a 2f       	mov	r21, r26
 78e:	0e 94 2f 04 	call	0x85e	; 0x85e <__xload_1>
 792:	66 23       	and	r22, r22
 794:	a1 f3       	breq	.-24     	; 0x77e <strnlen+0x16>
 796:	01 96       	adiw	r24, 0x01	; 1
 798:	a1 1d       	adc	r26, r1
 79a:	21 50       	subi	r18, 0x01	; 1
 79c:	31 09       	sbc	r19, r1
 79e:	ec cf       	rjmp	.-40     	; 0x778 <strnlen+0x10>

Disassembly of section .text.avrlibc:

00000650 <fputc>:
 650:	0f 93       	push	r16
 652:	1f 93       	push	r17
 654:	cf 93       	push	r28
 656:	df 93       	push	r29
 658:	fb 01       	movw	r30, r22
 65a:	24 81       	ldd	r18, Z+4	; 0x04
 65c:	21 fd       	sbrc	r18, 1
 65e:	03 c0       	rjmp	.+6      	; 0x666 <fputc+0x16>
 660:	8f ef       	ldi	r24, 0xFF	; 255
 662:	9f ef       	ldi	r25, 0xFF	; 255
 664:	2c c0       	rjmp	.+88     	; 0x6be <fputc+0x6e>
 666:	22 ff       	sbrs	r18, 2
 668:	16 c0       	rjmp	.+44     	; 0x696 <fputc+0x46>
 66a:	47 81       	ldd	r20, Z+7	; 0x07
 66c:	50 85       	ldd	r21, Z+8	; 0x08
 66e:	25 81       	ldd	r18, Z+5	; 0x05
 670:	36 81       	ldd	r19, Z+6	; 0x06
 672:	42 17       	cp	r20, r18
 674:	53 07       	cpc	r21, r19
 676:	44 f4       	brge	.+16     	; 0x688 <fputc+0x38>
 678:	a0 81       	ld	r26, Z
 67a:	b1 81       	ldd	r27, Z+1	; 0x01
 67c:	9d 01       	movw	r18, r26
 67e:	2f 5f       	subi	r18, 0xFF	; 255
 680:	3f 4f       	sbci	r19, 0xFF	; 255
 682:	31 83       	std	Z+1, r19	; 0x01
 684:	20 83       	st	Z, r18
 686:	8c 93       	st	X, r24
 688:	27 81       	ldd	r18, Z+7	; 0x07
 68a:	30 85       	ldd	r19, Z+8	; 0x08
 68c:	2f 5f       	subi	r18, 0xFF	; 255
 68e:	3f 4f       	sbci	r19, 0xFF	; 255
 690:	30 87       	std	Z+8, r19	; 0x08
 692:	27 83       	std	Z+7, r18	; 0x07
 694:	14 c0       	rjmp	.+40     	; 0x6be <fputc+0x6e>
 696:	8b 01       	movw	r16, r22
 698:	ec 01       	movw	r28, r24
 69a:	fb 01       	movw	r30, r22
 69c:	01 84       	ldd	r0, Z+9	; 0x09
 69e:	f2 85       	ldd	r31, Z+10	; 0x0a
 6a0:	e0 2d       	mov	r30, r0
 6a2:	09 95       	icall
 6a4:	89 2b       	or	r24, r25
 6a6:	e1 f6       	brne	.-72     	; 0x660 <fputc+0x10>
 6a8:	d8 01       	movw	r26, r16
 6aa:	17 96       	adiw	r26, 0x07	; 7
 6ac:	8d 91       	ld	r24, X+
 6ae:	9c 91       	ld	r25, X
 6b0:	18 97       	sbiw	r26, 0x08	; 8
 6b2:	01 96       	adiw	r24, 0x01	; 1
 6b4:	18 96       	adiw	r26, 0x08	; 8
 6b6:	9c 93       	st	X, r25
 6b8:	8e 93       	st	-X, r24
 6ba:	17 97       	sbiw	r26, 0x07	; 7
 6bc:	ce 01       	movw	r24, r28
 6be:	df 91       	pop	r29
 6c0:	cf 91       	pop	r28
 6c2:	1f 91       	pop	r17
 6c4:	0f 91       	pop	r16
 6c6:	08 95       	ret

Disassembly of section .text.avrlibc:

00000504 <__ultoa_invert>:
 504:	fa 01       	movw	r30, r20
 506:	aa 27       	eor	r26, r26
 508:	28 30       	cpi	r18, 0x08	; 8
 50a:	51 f1       	breq	.+84     	; 0x560 <__ultoa_invert+0x5c>
 50c:	20 31       	cpi	r18, 0x10	; 16
 50e:	81 f1       	breq	.+96     	; 0x570 <__ultoa_invert+0x6c>
 510:	e8 94       	clt
 512:	6f 93       	push	r22
 514:	6e 7f       	andi	r22, 0xFE	; 254
 516:	6e 5f       	subi	r22, 0xFE	; 254
 518:	7f 4f       	sbci	r23, 0xFF	; 255
 51a:	8f 4f       	sbci	r24, 0xFF	; 255
 51c:	9f 4f       	sbci	r25, 0xFF	; 255
 51e:	af 4f       	sbci	r26, 0xFF	; 255
 520:	b1 e0       	ldi	r27, 0x01	; 1
 522:	3e d0       	rcall	.+124    	; 0x5a0 <__ultoa_invert+0x9c>
 524:	b4 e0       	ldi	r27, 0x04	; 4
 526:	3c d0       	rcall	.+120    	; 0x5a0 <__ultoa_invert+0x9c>
 528:	67 0f       	add	r22, r23
 52a:	78 1f       	adc	r23, r24
 52c:	89 1f       	adc	r24, r25
 52e:	9a 1f       	adc	r25, r26
 530:	a1 1d       	adc	r26, r1
 532:	68 0f       	add	r22, r24
 534:	79 1f       	adc	r23, r25
 536:	8a 1f       	adc	r24, r26
 538:	91 1d       	adc	r25, r1
 53a:	a1 1d       	adc	r26, r1
 53c:	6a 0f       	add	r22, r26
 53e:	71 1d       	adc	r23, r1
 540:	81 1d       	adc	r24, r1
 542:	91 1d       	adc	r25, r1
 544:	a1 1d       	adc	r26, r1
 546:	20 d0       	rcall	.+64     	; 0x588 <__ultoa_invert+0x84>
 548:	09 f4       	brne	.+2      	; 0x54c <__ultoa_invert+0x48>
 54a:	68 94       	set
 54c:	3f 91       	pop	r19
 54e:	2a e0       	ldi	r18, 0x0A	; 10
 550:	26 9f       	mul	r18, r22
 552:	11 24       	eor	r1, r1
 554:	30 19       	sub	r19, r0
 556:	30 5d       	subi	r19, 0xD0	; 208
 558:	31 93       	st	Z+, r19
 55a:	de f6       	brtc	.-74     	; 0x512 <__ultoa_invert+0xe>
 55c:	cf 01       	movw	r24, r30
 55e:	08 95       	ret
 560:	46 2f       	mov	r20, r22
 562:	47 70       	andi	r20, 0x07	; 7
 564:	40 5d       	subi	r20, 0xD0	; 208
 566:	41 93       	st	Z+, r20
 568:	b3 e0       	ldi	r27, 0x03	; 3
 56a:	0f d0       	rcall	.+30     	; 0x58a <__ultoa_invert+0x86>
 56c:	c9 f7       	brne	.-14     	; 0x560 <__ultoa_invert+0x5c>
 56e:	f6 cf       	rjmp	.-20     	; 0x55c <__ultoa_invert+0x58>
 570:	46 2f       	mov	r20, r22
 572:	4f 70       	andi	r20, 0x0F	; 15
 574:	40 5d       	subi	r20, 0xD0	; 208
 576:	4a 33       	cpi	r20, 0x3A	; 58
 578:	18 f0       	brcs	.+6      	; 0x580 <__ultoa_invert+0x7c>
 57a:	49 5d       	subi	r20, 0xD9	; 217
 57c:	31 fd       	sbrc	r19, 1
 57e:	40 52       	subi	r20, 0x20	; 32
 580:	41 93       	st	Z+, r20
 582:	02 d0       	rcall	.+4      	; 0x588 <__ultoa_invert+0x84>
 584:	a9 f7       	brne	.-22     	; 0x570 <__ultoa_invert+0x6c>
 586:	ea cf       	rjmp	.-44     	; 0x55c <__ultoa_invert+0x58>
 588:	b4 e0       	ldi	r27, 0x04	; 4
 58a:	a6 95       	lsr	r26
 58c:	97 95       	ror	r25
 58e:	87 95       	ror	r24
 590:	77 95       	ror	r23
 592:	67 95       	ror	r22
 594:	ba 95       	dec	r27
 596:	c9 f7       	brne	.-14     	; 0x58a <__ultoa_invert+0x86>
 598:	00 97       	sbiw	r24, 0x00	; 0
 59a:	61 05       	cpc	r22, r1
 59c:	71 05       	cpc	r23, r1
 59e:	08 95       	ret
 5a0:	9b 01       	movw	r18, r22
 5a2:	ac 01       	movw	r20, r24
 5a4:	0a 2e       	mov	r0, r26
 5a6:	06 94       	lsr	r0
 5a8:	57 95       	ror	r21
 5aa:	47 95       	ror	r20
 5ac:	37 95       	ror	r19
 5ae:	27 95       	ror	r18
 5b0:	ba 95       	dec	r27
 5b2:	c9 f7       	brne	.-14     	; 0x5a6 <__ultoa_invert+0xa2>
 5b4:	62 0f       	add	r22, r18
 5b6:	73 1f       	adc	r23, r19
 5b8:	84 1f       	adc	r24, r20
 5ba:	95 1f       	adc	r25, r21
 5bc:	a0 1d       	adc	r26, r0
 5be:	08 95       	ret

Disassembly of section .text.libgcc:

0000085e <__xload_1>:
 85e:	57 fd       	sbrc	r21, 7
 860:	03 c0       	rjmp	.+6      	; 0x868 <__xload_1+0xa>
 862:	5b bf       	out	0x3b, r21	; 59
 864:	67 91       	elpm	r22, Z+
 866:	08 95       	ret
 868:	60 81       	ld	r22, Z
 86a:	08 95       	ret
