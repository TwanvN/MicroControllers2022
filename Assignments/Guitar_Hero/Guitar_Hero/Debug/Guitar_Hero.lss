
Guitar_Hero.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000294  00000328  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000f0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  00000328  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000060  00000000  00000000  00000357  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000ec4  00000000  00000000  000003b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000845  00000000  00000000  0000127b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000362  00000000  00000000  00001ac0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000d0  00000000  00000000  00001e24  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000297  00000000  00000000  00001ef4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000000cb  00000000  00000000  0000218b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000040  00000000  00000000  00002256  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  0000024a  0000024a  000002de  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002298  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.__vector_15 00000070  000000f0  000000f0  00000184  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.initTimer 00000012  00000238  00000238  000002cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.pwmInit 00000032  000001e8  000001e8  0000027c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.main    0000001e  0000021a  0000021a  000002ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .bss.timerOverflow 00000002  00800146  00800146  00000328  2**0
                  ALLOC
 18 .text.updateLight 00000036  000001b2  000001b2  00000246  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.playFirstSong 00000052  00000160  00000160  000001f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .bss.currentLight 00000002  00800148  00800148  00000328  2**0
                  ALLOC
 21 .data.firstSong 00000046  00800100  0000024e  000002e2  2**0
                  CONTENTS, ALLOC, LOAD, DATA

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4c 00 	jmp	0x98	; 0x98 <__ctors_end>
   4:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
   8:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
   c:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  10:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  14:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  18:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  1c:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  20:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  24:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  28:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  2c:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  30:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  34:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  38:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  3c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <_etext>
  40:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  44:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  48:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  4c:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  50:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  54:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  58:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  5c:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  60:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  64:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  68:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  6c:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  70:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  74:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  78:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  7c:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  80:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  84:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
  88:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>

0000008c <.dinit>:
  8c:	01 00       	.word	0x0001	; ????
  8e:	01 46       	sbci	r16, 0x61	; 97
  90:	00 02       	muls	r16, r16
  92:	4e 01       	movw	r8, r28
  94:	46 01       	movw	r8, r12
  96:	4a 80       	ldd	r4, Y+2	; 0x02

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e1       	ldi	r29, 0x10	; 16
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	ec e8       	ldi	r30, 0x8C	; 140
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	40 e0       	ldi	r20, 0x00	; 0
  aa:	19 c0       	rjmp	.+50     	; 0xde <__do_clear_bss+0x8>
  ac:	b7 91       	elpm	r27, Z+
  ae:	a7 91       	elpm	r26, Z+
  b0:	37 91       	elpm	r19, Z+
  b2:	27 91       	elpm	r18, Z+
  b4:	07 91       	elpm	r16, Z+
  b6:	07 fd       	sbrc	r16, 7
  b8:	0e c0       	rjmp	.+28     	; 0xd6 <__do_clear_bss>
  ba:	97 91       	elpm	r25, Z+
  bc:	87 91       	elpm	r24, Z+
  be:	ef 01       	movw	r28, r30
  c0:	f9 2f       	mov	r31, r25
  c2:	e8 2f       	mov	r30, r24
  c4:	0b bf       	out	0x3b, r16	; 59
  c6:	07 90       	elpm	r0, Z+
  c8:	0d 92       	st	X+, r0
  ca:	a2 17       	cp	r26, r18
  cc:	b3 07       	cpc	r27, r19
  ce:	d9 f7       	brne	.-10     	; 0xc6 <__do_copy_data+0x22>
  d0:	fe 01       	movw	r30, r28
  d2:	1b be       	out	0x3b, r1	; 59
  d4:	04 c0       	rjmp	.+8      	; 0xde <__do_clear_bss+0x8>

000000d6 <__do_clear_bss>:
  d6:	1d 92       	st	X+, r1
  d8:	a2 17       	cp	r26, r18
  da:	b3 07       	cpc	r27, r19
  dc:	e1 f7       	brne	.-8      	; 0xd6 <__do_clear_bss>
  de:	e8 39       	cpi	r30, 0x98	; 152
  e0:	f4 07       	cpc	r31, r20
  e2:	21 f7       	brne	.-56     	; 0xac <__do_copy_data+0x8>
  e4:	0e 94 0d 01 	call	0x21a	; 0x21a <main>
  e8:	0c 94 76 00 	jmp	0xec	; 0xec <_exit>

000000ec <_exit>:
  ec:	f8 94       	cli

000000ee <__stop_program>:
  ee:	ff cf       	rjmp	.-2      	; 0xee <__stop_program>

Disassembly of section .text:

0000024a <__bad_interrupt>:
 24a:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.__vector_15:

000000f0 <__vector_15>:
int seconds = 0;

int timerRunning = 0;

ISR ( TIMER0_COMP_vect )
{
  f0:	1f 92       	push	r1
  f2:	0f 92       	push	r0
  f4:	0f b6       	in	r0, 0x3f	; 63
  f6:	0f 92       	push	r0
  f8:	11 24       	eor	r1, r1
  fa:	0b b6       	in	r0, 0x3b	; 59
  fc:	0f 92       	push	r0
  fe:	2f 93       	push	r18
 100:	3f 93       	push	r19
 102:	4f 93       	push	r20
 104:	5f 93       	push	r21
 106:	6f 93       	push	r22
 108:	7f 93       	push	r23
 10a:	8f 93       	push	r24
 10c:	9f 93       	push	r25
 10e:	af 93       	push	r26
 110:	bf 93       	push	r27
 112:	ef 93       	push	r30
 114:	ff 93       	push	r31
	timerOverflow++;
 116:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <timerOverflow>
 11a:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <timerOverflow+0x1>
 11e:	01 96       	adiw	r24, 0x01	; 1
 120:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <timerOverflow+0x1>
 124:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <timerOverflow>
	
	if (timerOverflow == 3000)
 128:	88 3b       	cpi	r24, 0xB8	; 184
 12a:	9b 40       	sbci	r25, 0x0B	; 11
 12c:	31 f4       	brne	.+12     	; 0x13a <__vector_15+0x4a>
	{
		updateLight();
 12e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <updateLight>
		timerOverflow = 0;
 132:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <timerOverflow+0x1>
 136:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <timerOverflow>
	}
		
}
 13a:	ff 91       	pop	r31
 13c:	ef 91       	pop	r30
 13e:	bf 91       	pop	r27
 140:	af 91       	pop	r26
 142:	9f 91       	pop	r25
 144:	8f 91       	pop	r24
 146:	7f 91       	pop	r23
 148:	6f 91       	pop	r22
 14a:	5f 91       	pop	r21
 14c:	4f 91       	pop	r20
 14e:	3f 91       	pop	r19
 150:	2f 91       	pop	r18
 152:	0f 90       	pop	r0
 154:	0b be       	out	0x3b, r0	; 59
 156:	0f 90       	pop	r0
 158:	0f be       	out	0x3f, r0	; 63
 15a:	0f 90       	pop	r0
 15c:	1f 90       	pop	r1
 15e:	18 95       	reti

Disassembly of section .text.initTimer:

00000238 <initTimer>:
	return 1;
}

void initTimer()
{
	OCR0 = TICK_MS;
 238:	8a ef       	ldi	r24, 0xFA	; 250
 23a:	81 bf       	out	0x31, r24	; 49
	TIMSK |= (1<<7);
 23c:	87 b7       	in	r24, 0x37	; 55
 23e:	80 68       	ori	r24, 0x80	; 128
 240:	87 bf       	out	0x37, r24	; 55
	TCCR0 = 0b00000011;
 242:	83 e0       	ldi	r24, 0x03	; 3
 244:	83 bf       	out	0x33, r24	; 51
	sei();
 246:	78 94       	sei
 248:	08 95       	ret

Disassembly of section .text.pwmInit:

000001e8 <pwmInit>:
}

void pwmInit() {
	DDRE = 0xFF;
 1e8:	8f ef       	ldi	r24, 0xFF	; 255
 1ea:	82 b9       	out	0x02, r24	; 2
	TCNT3 = 0;
 1ec:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1f0:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	
	TCCR3A = 0b00101001;
 1f4:	89 e2       	ldi	r24, 0x29	; 41
 1f6:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
	TCCR3B = 0b01010010;
 1fa:	82 e5       	ldi	r24, 0x52	; 82
 1fc:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	
	OCR3A = 100;
 200:	84 e6       	ldi	r24, 0x64	; 100
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 208:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	OCR3B = 10;
 20c:	8a e0       	ldi	r24, 0x0A	; 10
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 214:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 218:	08 95       	ret

Disassembly of section .text.main:

0000021a <main>:
void initTimer();
void pwmInit();

int main(void)
{
	DDRF = 0xFF;
 21a:	8f ef       	ldi	r24, 0xFF	; 255
 21c:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	DDRB = 0x00;
 220:	17 ba       	out	0x17, r1	; 23
	
	TIMSK = 0b01000010;
 222:	82 e4       	ldi	r24, 0x42	; 66
 224:	87 bf       	out	0x37, r24	; 55
	
	initTimer();
 226:	0e 94 1c 01 	call	0x238	; 0x238 <initTimer>
	pwmInit();
 22a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <pwmInit>
	
	playFirstSong();
 22e:	0e 94 b0 00 	call	0x160	; 0x160 <playFirstSong>
	
	return 1;
}
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	08 95       	ret

Disassembly of section .text.updateLight:

000001b2 <updateLight>:
};

int currentLight = 0;

void updateLight() {
	currentLight++;
 1b2:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <currentLight>
 1b6:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <currentLight+0x1>
 1ba:	01 96       	adiw	r24, 0x01	; 1
 1bc:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <currentLight+0x1>
 1c0:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <currentLight>
	OCR3B = firstSong[currentLight].pwmSignal;
 1c4:	fc 01       	movw	r30, r24
 1c6:	ee 0f       	add	r30, r30
 1c8:	ff 1f       	adc	r31, r31
 1ca:	ee 0f       	add	r30, r30
 1cc:	ff 1f       	adc	r31, r31
 1ce:	ee 0f       	add	r30, r30
 1d0:	ff 1f       	adc	r31, r31
 1d2:	e8 1b       	sub	r30, r24
 1d4:	f9 0b       	sbc	r31, r25
 1d6:	e0 50       	subi	r30, 0x00	; 0
 1d8:	ff 4f       	sbci	r31, 0xFF	; 255
 1da:	85 81       	ldd	r24, Z+5	; 0x05
 1dc:	96 81       	ldd	r25, Z+6	; 0x06
 1de:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 1e2:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 1e6:	08 95       	ret

Disassembly of section .text.playFirstSong:

00000160 <playFirstSong>:
}

void playFirstSong() {

		PORTF = firstSong[currentLight].lightSequence;
 160:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <currentLight>
 164:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <currentLight+0x1>
 168:	fc 01       	movw	r30, r24
 16a:	ee 0f       	add	r30, r30
 16c:	ff 1f       	adc	r31, r31
 16e:	ee 0f       	add	r30, r30
 170:	ff 1f       	adc	r31, r31
 172:	ee 0f       	add	r30, r30
 174:	ff 1f       	adc	r31, r31
 176:	e8 1b       	sub	r30, r24
 178:	f9 0b       	sbc	r31, r25
 17a:	e0 50       	subi	r30, 0x00	; 0
 17c:	ff 4f       	sbci	r31, 0xFF	; 255
 17e:	82 81       	ldd	r24, Z+2	; 0x02
 180:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
			{
				currentLight++;
			}
			*/
			
			if (currentLight >= (sizeof(firstSong) / sizeof(firstSong[0])))
 184:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <currentLight>
 188:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <currentLight+0x1>
 18c:	8a 30       	cpi	r24, 0x0A	; 10
 18e:	91 05       	cpc	r25, r1
 190:	78 f4       	brcc	.+30     	; 0x1b0 <playFirstSong+0x50>
			{
				break;
			} else {
				PORTF = firstSong[currentLight].lightSequence;
 192:	fc 01       	movw	r30, r24
 194:	ee 0f       	add	r30, r30
 196:	ff 1f       	adc	r31, r31
 198:	ee 0f       	add	r30, r30
 19a:	ff 1f       	adc	r31, r31
 19c:	ee 0f       	add	r30, r30
 19e:	ff 1f       	adc	r31, r31
 1a0:	e8 1b       	sub	r30, r24
 1a2:	f9 0b       	sbc	r31, r25
 1a4:	e0 50       	subi	r30, 0x00	; 0
 1a6:	ff 4f       	sbci	r31, 0xFF	; 255
 1a8:	82 81       	ldd	r24, Z+2	; 0x02
 1aa:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
			}
		}
 1ae:	ea cf       	rjmp	.-44     	; 0x184 <playFirstSong+0x24>
 1b0:	08 95       	ret
