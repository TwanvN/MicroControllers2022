
Guitar_Hero.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004de  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000ea  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000004de  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000060  00000000  00000000  0000050d  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000f37  00000000  00000000  0000056d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000093e  00000000  00000000  000014a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000400  00000000  00000000  00001de2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000dc  00000000  00000000  000021e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000292  00000000  00000000  000022c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000181  00000000  00000000  00002552  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000040  00000000  00000000  000026d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  00000466  00000466  000004da  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002714  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.main    00000038  00000360  00000360  000003d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.initTimer 00000010  00000404  00000404  00000478  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.__vector_8 00000086  000001be  000001be  00000232  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.__vector_10 00000016  000003d8  000003d8  0000044c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.UTS_Init 0000001e  000003ba  000003ba  0000042e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.UTS_Trigger 00000016  000003ee  000003ee  00000462  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .bss.ticksOnTrigger 00000001  00800102  00800102  000004de  2**0
                  ALLOC
 20 .bss.currentDistance 00000002  00800100  00800100  000004de  2**0
                  ALLOC
 21 .text.avrlibc.fplib 0000000e  00000414  00000414  00000488  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.avrlibc.fplib 0000005e  000002be  000002be  00000332  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.avrlibc.fplib 0000007a  00000244  00000244  000002b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.avrlibc.fplib 00000044  0000031c  0000031c  00000390  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.avrlibc.fplib 0000000e  00000422  00000422  00000496  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.avrlibc.fplib 00000008  00000458  00000458  000004cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.avrlibc.fplib 000000d4  000000ea  000000ea  0000015e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.avrlibc.fplib 0000000c  0000044c  0000044c  000004c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.avrlibc.fplib 00000006  00000460  00000460  000004d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.avrlibc.fplib 0000000e  00000430  00000430  000004a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.avrlibc.fplib 0000000e  0000043e  0000043e  000004b2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.avrlibc.fplib 00000022  00000398  00000398  0000040c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 49 00 	jmp	0x92	; 0x92 <__ctors_end>
   4:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
   8:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
   c:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  10:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  14:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  18:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  1c:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  20:	0c 94 df 00 	jmp	0x1be	; 0x1be <__vector_8>
  24:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  28:	0c 94 ec 01 	jmp	0x3d8	; 0x3d8 <__vector_10>
  2c:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  30:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  34:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  38:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  3c:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  40:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  44:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  48:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  4c:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  50:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  54:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  58:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  5c:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  60:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  64:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  68:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  6c:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  70:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  74:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  78:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  7c:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  80:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  84:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>
  88:	0c 94 33 02 	jmp	0x466	; 0x466 <__bad_interrupt>

0000008c <.dinit>:
  8c:	01 00       	.word	0x0001	; ????
  8e:	01 03       	mulsu	r16, r17
  90:	80 00       	.word	0x0080	; ????

00000092 <__ctors_end>:
  92:	11 24       	eor	r1, r1
  94:	1f be       	out	0x3f, r1	; 63
  96:	cf ef       	ldi	r28, 0xFF	; 255
  98:	d0 e1       	ldi	r29, 0x10	; 16
  9a:	de bf       	out	0x3e, r29	; 62
  9c:	cd bf       	out	0x3d, r28	; 61

0000009e <__do_copy_data>:
  9e:	ec e8       	ldi	r30, 0x8C	; 140
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	40 e0       	ldi	r20, 0x00	; 0
  a4:	19 c0       	rjmp	.+50     	; 0xd8 <__do_clear_bss+0x8>
  a6:	b7 91       	elpm	r27, Z+
  a8:	a7 91       	elpm	r26, Z+
  aa:	37 91       	elpm	r19, Z+
  ac:	27 91       	elpm	r18, Z+
  ae:	07 91       	elpm	r16, Z+
  b0:	07 fd       	sbrc	r16, 7
  b2:	0e c0       	rjmp	.+28     	; 0xd0 <__do_clear_bss>
  b4:	97 91       	elpm	r25, Z+
  b6:	87 91       	elpm	r24, Z+
  b8:	ef 01       	movw	r28, r30
  ba:	f9 2f       	mov	r31, r25
  bc:	e8 2f       	mov	r30, r24
  be:	0b bf       	out	0x3b, r16	; 59
  c0:	07 90       	elpm	r0, Z+
  c2:	0d 92       	st	X+, r0
  c4:	a2 17       	cp	r26, r18
  c6:	b3 07       	cpc	r27, r19
  c8:	d9 f7       	brne	.-10     	; 0xc0 <__do_copy_data+0x22>
  ca:	fe 01       	movw	r30, r28
  cc:	1b be       	out	0x3b, r1	; 59
  ce:	04 c0       	rjmp	.+8      	; 0xd8 <__do_clear_bss+0x8>

000000d0 <__do_clear_bss>:
  d0:	1d 92       	st	X+, r1
  d2:	a2 17       	cp	r26, r18
  d4:	b3 07       	cpc	r27, r19
  d6:	e1 f7       	brne	.-8      	; 0xd0 <__do_clear_bss>
  d8:	e1 39       	cpi	r30, 0x91	; 145
  da:	f4 07       	cpc	r31, r20
  dc:	21 f7       	brne	.-56     	; 0xa6 <__do_copy_data+0x8>
  de:	0e 94 b0 01 	call	0x360	; 0x360 <main>
  e2:	0c 94 73 00 	jmp	0xe6	; 0xe6 <_exit>

000000e6 <_exit>:
  e6:	f8 94       	cli

000000e8 <__stop_program>:
  e8:	ff cf       	rjmp	.-2      	; 0xe8 <__stop_program>

Disassembly of section .text:

00000466 <__bad_interrupt>:
 466:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

00000360 <main>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 360:	2f ef       	ldi	r18, 0xFF	; 255
 362:	84 e3       	ldi	r24, 0x34	; 52
 364:	9c e0       	ldi	r25, 0x0C	; 12
 366:	21 50       	subi	r18, 0x01	; 1
 368:	80 40       	sbci	r24, 0x00	; 0
 36a:	90 40       	sbci	r25, 0x00	; 0
 36c:	e1 f7       	brne	.-8      	; 0x366 <main+0x6>
 36e:	00 c0       	rjmp	.+0      	; 0x370 <main+0x10>
 370:	00 00       	nop
int main(void)
{	
	_delay_ms(500);	
	
	// Init I/O
	DDRD = 0xFF;			// Port D to output
 372:	8f ef       	ldi	r24, 0xFF	; 255
 374:	81 bb       	out	0x11, r24	; 17
			
	UTS_Init();
 376:	0e 94 dd 01 	call	0x3ba	; 0x3ba <UTS_Init>
					
    while (1) {		
		
		UTS_Trigger();
 37a:	0e 94 f7 01 	call	0x3ee	; 0x3ee <UTS_Trigger>
		
		PORTD = currentDistance;
 37e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 382:	82 bb       	out	0x12, r24	; 18
 384:	2f e7       	ldi	r18, 0x7F	; 127
 386:	8a e1       	ldi	r24, 0x1A	; 26
 388:	96 e0       	ldi	r25, 0x06	; 6
 38a:	21 50       	subi	r18, 0x01	; 1
 38c:	80 40       	sbci	r24, 0x00	; 0
 38e:	90 40       	sbci	r25, 0x00	; 0
 390:	e1 f7       	brne	.-8      	; 0x38a <main+0x2a>
 392:	00 c0       	rjmp	.+0      	; 0x394 <main+0x34>
 394:	00 00       	nop
 396:	f1 cf       	rjmp	.-30     	; 0x37a <main+0x1a>

Disassembly of section .text.initTimer:

00000404 <initTimer>:
	PORTE &= ~(1 << TRIGGER_PIN);	// Trigger pin low
}

static void initTimer()
{
	TCNT2 = 0;				// Set start value for timer to zero
 404:	14 bc       	out	0x24, r1	; 36
	TIMSK |= 0b01000000;	// Enable the overflow interrupt for timer 2 
 406:	87 b7       	in	r24, 0x37	; 55
 408:	80 64       	ori	r24, 0x40	; 64
 40a:	87 bf       	out	0x37, r24	; 55
	TCCR2 = 0b00001100;		// Enable wave form generation with 256 pre-scaler
 40c:	8c e0       	ldi	r24, 0x0C	; 12
 40e:	85 bd       	out	0x25, r24	; 37
	sei();					// Enable interrupts
 410:	78 94       	sei
 412:	08 95       	ret

Disassembly of section .text.__vector_8:

000001be <__vector_8>:
/************************************************************************/
/* Interrupt triggered on rising and falling edge,						*/
/* Calculates the distance from the sensor                              */
/************************************************************************/
ISR ( INT7_vect )
{	
 1be:	1f 92       	push	r1
 1c0:	0f 92       	push	r0
 1c2:	0f b6       	in	r0, 0x3f	; 63
 1c4:	0f 92       	push	r0
 1c6:	11 24       	eor	r1, r1
 1c8:	0b b6       	in	r0, 0x3b	; 59
 1ca:	0f 92       	push	r0
 1cc:	2f 93       	push	r18
 1ce:	3f 93       	push	r19
 1d0:	4f 93       	push	r20
 1d2:	5f 93       	push	r21
 1d4:	6f 93       	push	r22
 1d6:	7f 93       	push	r23
 1d8:	8f 93       	push	r24
 1da:	9f 93       	push	r25
 1dc:	af 93       	push	r26
 1de:	bf 93       	push	r27
 1e0:	ef 93       	push	r30
 1e2:	ff 93       	push	r31
	// Setting the time from the timer on PE7 going high
	if( PINE & (1 << ECHO_PIN) )
 1e4:	0f 9b       	sbis	0x01, 7	; 1
 1e6:	04 c0       	rjmp	.+8      	; 0x1f0 <__vector_8+0x32>
		ticksOnTrigger = TCNT2;
 1e8:	84 b5       	in	r24, 0x24	; 36
 1ea:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <ticksOnTrigger>
 1ee:	17 c0       	rjmp	.+46     	; 0x21e <__vector_8+0x60>
	
	else
	{
		unsigned char diff = TCNT2 - ticksOnTrigger;		// Getting the difference from timer and start
 1f0:	64 b5       	in	r22, 0x24	; 36
 1f2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <ticksOnTrigger>
 1f6:	68 1b       	sub	r22, r24
		
		currentDistance = ( diff * ( 32.0 / TICK_CM ) );	// Calculating cm
 1f8:	70 e0       	ldi	r23, 0x00	; 0
 1fa:	80 e0       	ldi	r24, 0x00	; 0
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	0e 94 24 01 	call	0x248	; 0x248 <__floatsisf>
 202:	2b ec       	ldi	r18, 0xCB	; 203
 204:	3d e3       	ldi	r19, 0x3D	; 61
 206:	4d e0       	ldi	r20, 0x0D	; 13
 208:	5f e3       	ldi	r21, 0x3F	; 63
 20a:	0e 94 2c 02 	call	0x458	; 0x458 <__mulsf3>
 20e:	0e 94 0a 02 	call	0x414	; 0x414 <__fixsfsi>
 212:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 216:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
		
		
		ticksOnTrigger = 0;									// resetting ticksOnTrigger
 21a:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <ticksOnTrigger>
	}
	
}
 21e:	ff 91       	pop	r31
 220:	ef 91       	pop	r30
 222:	bf 91       	pop	r27
 224:	af 91       	pop	r26
 226:	9f 91       	pop	r25
 228:	8f 91       	pop	r24
 22a:	7f 91       	pop	r23
 22c:	6f 91       	pop	r22
 22e:	5f 91       	pop	r21
 230:	4f 91       	pop	r20
 232:	3f 91       	pop	r19
 234:	2f 91       	pop	r18
 236:	0f 90       	pop	r0
 238:	0b be       	out	0x3b, r0	; 59
 23a:	0f 90       	pop	r0
 23c:	0f be       	out	0x3f, r0	; 63
 23e:	0f 90       	pop	r0
 240:	1f 90       	pop	r1
 242:	18 95       	reti

Disassembly of section .text.__vector_10:

000003d8 <__vector_10>:

/************************************************************************/
/* Overflow interrupt for timer 2                                        */
/************************************************************************/
ISR ( TIMER2_OVF_vect )
{
 3d8:	1f 92       	push	r1
 3da:	0f 92       	push	r0
 3dc:	0f b6       	in	r0, 0x3f	; 63
 3de:	0f 92       	push	r0
 3e0:	11 24       	eor	r1, r1
	TCNT2 = 0; // Resetting timer
 3e2:	14 bc       	out	0x24, r1	; 36
}
 3e4:	0f 90       	pop	r0
 3e6:	0f be       	out	0x3f, r0	; 63
 3e8:	0f 90       	pop	r0
 3ea:	1f 90       	pop	r1
 3ec:	18 95       	reti

Disassembly of section .text.UTS_Init:

000003ba <UTS_Init>:
/************************************************************************/
/* Inits the ultrasone sensor                                           */
/************************************************************************/
void UTS_Init( void )
{
	DDRE |= (1 << TRIGGER_PIN);		// PORTE 0 to output
 3ba:	82 b1       	in	r24, 0x02	; 2
 3bc:	81 60       	ori	r24, 0x01	; 1
 3be:	82 b9       	out	0x02, r24	; 2
	DDRE &= ~(1 << ECHO_PIN);		// PORTE 7 to input
 3c0:	82 b1       	in	r24, 0x02	; 2
 3c2:	8f 77       	andi	r24, 0x7F	; 127
 3c4:	82 b9       	out	0x02, r24	; 2
	
	// Init Interrupt hardware
	EICRB |= 0x40;			// ISC7 Rising edge and falling edge
 3c6:	8a b7       	in	r24, 0x3a	; 58
 3c8:	80 64       	ori	r24, 0x40	; 64
 3ca:	8a bf       	out	0x3a, r24	; 58
	EIMSK |= 0x80;			// Enable INT7
 3cc:	89 b7       	in	r24, 0x39	; 57
 3ce:	80 68       	ori	r24, 0x80	; 128
 3d0:	89 bf       	out	0x39, r24	; 57
	
	initTimer();
 3d2:	0e 94 02 02 	call	0x404	; 0x404 <initTimer>
 3d6:	08 95       	ret

Disassembly of section .text.UTS_Trigger:

000003ee <UTS_Trigger>:
/************************************************************************/
/* Triggers the ultrasone sensor for update                             */
/************************************************************************/
void UTS_Trigger( void )
{
	PORTE |= (1 << TRIGGER_PIN);	// Trigger pin high
 3ee:	83 b1       	in	r24, 0x03	; 3
 3f0:	81 60       	ori	r24, 0x01	; 1
 3f2:	83 b9       	out	0x03, r24	; 3
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3f4:	83 e0       	ldi	r24, 0x03	; 3
 3f6:	8a 95       	dec	r24
 3f8:	f1 f7       	brne	.-4      	; 0x3f6 <UTS_Trigger+0x8>
 3fa:	00 00       	nop
	
	_delay_us(10);					// 10 micro-seconds delay
	
	PORTE &= ~(1 << TRIGGER_PIN);	// Trigger pin low
 3fc:	83 b1       	in	r24, 0x03	; 3
 3fe:	8e 7f       	andi	r24, 0xFE	; 254
 400:	83 b9       	out	0x03, r24	; 3
 402:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000414 <__fixsfsi>:
 414:	0e 94 5f 01 	call	0x2be	; 0x2be <__fixunssfsi>
 418:	68 94       	set
 41a:	b1 11       	cpse	r27, r1
 41c:	0c 94 12 02 	jmp	0x424	; 0x424 <__fp_szero>
 420:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000002be <__fixunssfsi>:
 2be:	0e 94 96 01 	call	0x32c	; 0x32c <__fp_splitA>
 2c2:	88 f0       	brcs	.+34     	; 0x2e6 <__fixunssfsi+0x28>
 2c4:	9f 57       	subi	r25, 0x7F	; 127
 2c6:	98 f0       	brcs	.+38     	; 0x2ee <__fixunssfsi+0x30>
 2c8:	b9 2f       	mov	r27, r25
 2ca:	99 27       	eor	r25, r25
 2cc:	b7 51       	subi	r27, 0x17	; 23
 2ce:	b0 f0       	brcs	.+44     	; 0x2fc <__fixunssfsi+0x3e>
 2d0:	e1 f0       	breq	.+56     	; 0x30a <__fixunssfsi+0x4c>
 2d2:	66 0f       	add	r22, r22
 2d4:	77 1f       	adc	r23, r23
 2d6:	88 1f       	adc	r24, r24
 2d8:	99 1f       	adc	r25, r25
 2da:	1a f0       	brmi	.+6      	; 0x2e2 <__fixunssfsi+0x24>
 2dc:	ba 95       	dec	r27
 2de:	c9 f7       	brne	.-14     	; 0x2d2 <__fixunssfsi+0x14>
 2e0:	14 c0       	rjmp	.+40     	; 0x30a <__fixunssfsi+0x4c>
 2e2:	b1 30       	cpi	r27, 0x01	; 1
 2e4:	91 f0       	breq	.+36     	; 0x30a <__fixunssfsi+0x4c>
 2e6:	0e 94 11 02 	call	0x422	; 0x422 <__fp_zero>
 2ea:	b1 e0       	ldi	r27, 0x01	; 1
 2ec:	08 95       	ret
 2ee:	0c 94 11 02 	jmp	0x422	; 0x422 <__fp_zero>
 2f2:	67 2f       	mov	r22, r23
 2f4:	78 2f       	mov	r23, r24
 2f6:	88 27       	eor	r24, r24
 2f8:	b8 5f       	subi	r27, 0xF8	; 248
 2fa:	39 f0       	breq	.+14     	; 0x30a <__fixunssfsi+0x4c>
 2fc:	b9 3f       	cpi	r27, 0xF9	; 249
 2fe:	cc f3       	brlt	.-14     	; 0x2f2 <__fixunssfsi+0x34>
 300:	86 95       	lsr	r24
 302:	77 95       	ror	r23
 304:	67 95       	ror	r22
 306:	b3 95       	inc	r27
 308:	d9 f7       	brne	.-10     	; 0x300 <__fixunssfsi+0x42>
 30a:	3e f4       	brtc	.+14     	; 0x31a <__fixunssfsi+0x5c>
 30c:	90 95       	com	r25
 30e:	80 95       	com	r24
 310:	70 95       	com	r23
 312:	61 95       	neg	r22
 314:	7f 4f       	sbci	r23, 0xFF	; 255
 316:	8f 4f       	sbci	r24, 0xFF	; 255
 318:	9f 4f       	sbci	r25, 0xFF	; 255
 31a:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000244 <__floatunsisf>:
 244:	e8 94       	clt
 246:	09 c0       	rjmp	.+18     	; 0x25a <__floatsisf+0x12>

00000248 <__floatsisf>:
 248:	97 fb       	bst	r25, 7
 24a:	3e f4       	brtc	.+14     	; 0x25a <__floatsisf+0x12>
 24c:	90 95       	com	r25
 24e:	80 95       	com	r24
 250:	70 95       	com	r23
 252:	61 95       	neg	r22
 254:	7f 4f       	sbci	r23, 0xFF	; 255
 256:	8f 4f       	sbci	r24, 0xFF	; 255
 258:	9f 4f       	sbci	r25, 0xFF	; 255
 25a:	99 23       	and	r25, r25
 25c:	a9 f0       	breq	.+42     	; 0x288 <__floatsisf+0x40>
 25e:	f9 2f       	mov	r31, r25
 260:	96 e9       	ldi	r25, 0x96	; 150
 262:	bb 27       	eor	r27, r27
 264:	93 95       	inc	r25
 266:	f6 95       	lsr	r31
 268:	87 95       	ror	r24
 26a:	77 95       	ror	r23
 26c:	67 95       	ror	r22
 26e:	b7 95       	ror	r27
 270:	f1 11       	cpse	r31, r1
 272:	f8 cf       	rjmp	.-16     	; 0x264 <__floatsisf+0x1c>
 274:	fa f4       	brpl	.+62     	; 0x2b4 <__floatsisf+0x6c>
 276:	bb 0f       	add	r27, r27
 278:	11 f4       	brne	.+4      	; 0x27e <__floatsisf+0x36>
 27a:	60 ff       	sbrs	r22, 0
 27c:	1b c0       	rjmp	.+54     	; 0x2b4 <__floatsisf+0x6c>
 27e:	6f 5f       	subi	r22, 0xFF	; 255
 280:	7f 4f       	sbci	r23, 0xFF	; 255
 282:	8f 4f       	sbci	r24, 0xFF	; 255
 284:	9f 4f       	sbci	r25, 0xFF	; 255
 286:	16 c0       	rjmp	.+44     	; 0x2b4 <__floatsisf+0x6c>
 288:	88 23       	and	r24, r24
 28a:	11 f0       	breq	.+4      	; 0x290 <__floatsisf+0x48>
 28c:	96 e9       	ldi	r25, 0x96	; 150
 28e:	11 c0       	rjmp	.+34     	; 0x2b2 <__floatsisf+0x6a>
 290:	77 23       	and	r23, r23
 292:	21 f0       	breq	.+8      	; 0x29c <__floatsisf+0x54>
 294:	9e e8       	ldi	r25, 0x8E	; 142
 296:	87 2f       	mov	r24, r23
 298:	76 2f       	mov	r23, r22
 29a:	05 c0       	rjmp	.+10     	; 0x2a6 <__floatsisf+0x5e>
 29c:	66 23       	and	r22, r22
 29e:	71 f0       	breq	.+28     	; 0x2bc <__floatsisf+0x74>
 2a0:	96 e8       	ldi	r25, 0x86	; 134
 2a2:	86 2f       	mov	r24, r22
 2a4:	70 e0       	ldi	r23, 0x00	; 0
 2a6:	60 e0       	ldi	r22, 0x00	; 0
 2a8:	2a f0       	brmi	.+10     	; 0x2b4 <__floatsisf+0x6c>
 2aa:	9a 95       	dec	r25
 2ac:	66 0f       	add	r22, r22
 2ae:	77 1f       	adc	r23, r23
 2b0:	88 1f       	adc	r24, r24
 2b2:	da f7       	brpl	.-10     	; 0x2aa <__floatsisf+0x62>
 2b4:	88 0f       	add	r24, r24
 2b6:	96 95       	lsr	r25
 2b8:	87 95       	ror	r24
 2ba:	97 f9       	bld	r25, 7
 2bc:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000031c <__fp_split3>:
 31c:	57 fd       	sbrc	r21, 7
 31e:	90 58       	subi	r25, 0x80	; 128
 320:	44 0f       	add	r20, r20
 322:	55 1f       	adc	r21, r21
 324:	59 f0       	breq	.+22     	; 0x33c <__fp_splitA+0x10>
 326:	5f 3f       	cpi	r21, 0xFF	; 255
 328:	71 f0       	breq	.+28     	; 0x346 <__fp_splitA+0x1a>
 32a:	47 95       	ror	r20

0000032c <__fp_splitA>:
 32c:	88 0f       	add	r24, r24
 32e:	97 fb       	bst	r25, 7
 330:	99 1f       	adc	r25, r25
 332:	61 f0       	breq	.+24     	; 0x34c <__fp_splitA+0x20>
 334:	9f 3f       	cpi	r25, 0xFF	; 255
 336:	79 f0       	breq	.+30     	; 0x356 <__fp_splitA+0x2a>
 338:	87 95       	ror	r24
 33a:	08 95       	ret
 33c:	12 16       	cp	r1, r18
 33e:	13 06       	cpc	r1, r19
 340:	14 06       	cpc	r1, r20
 342:	55 1f       	adc	r21, r21
 344:	f2 cf       	rjmp	.-28     	; 0x32a <__fp_split3+0xe>
 346:	46 95       	lsr	r20
 348:	f1 df       	rcall	.-30     	; 0x32c <__fp_splitA>
 34a:	08 c0       	rjmp	.+16     	; 0x35c <__fp_splitA+0x30>
 34c:	16 16       	cp	r1, r22
 34e:	17 06       	cpc	r1, r23
 350:	18 06       	cpc	r1, r24
 352:	99 1f       	adc	r25, r25
 354:	f1 cf       	rjmp	.-30     	; 0x338 <__fp_splitA+0xc>
 356:	86 95       	lsr	r24
 358:	71 05       	cpc	r23, r1
 35a:	61 05       	cpc	r22, r1
 35c:	08 94       	sec
 35e:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000422 <__fp_zero>:
 422:	e8 94       	clt

00000424 <__fp_szero>:
 424:	bb 27       	eor	r27, r27
 426:	66 27       	eor	r22, r22
 428:	77 27       	eor	r23, r23
 42a:	cb 01       	movw	r24, r22
 42c:	97 f9       	bld	r25, 7
 42e:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000458 <__mulsf3>:
 458:	0e 94 75 00 	call	0xea	; 0xea <__data_load_end>
 45c:	0c 94 cc 01 	jmp	0x398	; 0x398 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

000000ea <__mulsf3x>:
  ea:	0f c0       	rjmp	.+30     	; 0x10a <__mulsf3x+0x20>
  ec:	0e 94 18 02 	call	0x430	; 0x430 <__fp_pscA>
  f0:	38 f0       	brcs	.+14     	; 0x100 <__mulsf3x+0x16>
  f2:	0e 94 1f 02 	call	0x43e	; 0x43e <__fp_pscB>
  f6:	20 f0       	brcs	.+8      	; 0x100 <__mulsf3x+0x16>
  f8:	95 23       	and	r25, r21
  fa:	11 f0       	breq	.+4      	; 0x100 <__mulsf3x+0x16>
  fc:	0c 94 26 02 	jmp	0x44c	; 0x44c <__fp_inf>
 100:	0c 94 30 02 	jmp	0x460	; 0x460 <__fp_nan>
 104:	11 24       	eor	r1, r1
 106:	0c 94 12 02 	jmp	0x424	; 0x424 <__fp_szero>
 10a:	0e 94 8e 01 	call	0x31c	; 0x31c <__fp_split3>
 10e:	70 f3       	brcs	.-36     	; 0xec <__mulsf3x+0x2>

00000110 <__mulsf3_pse>:
 110:	95 9f       	mul	r25, r21
 112:	c1 f3       	breq	.-16     	; 0x104 <__mulsf3x+0x1a>
 114:	95 0f       	add	r25, r21
 116:	50 e0       	ldi	r21, 0x00	; 0
 118:	55 1f       	adc	r21, r21
 11a:	62 9f       	mul	r22, r18
 11c:	f0 01       	movw	r30, r0
 11e:	72 9f       	mul	r23, r18
 120:	bb 27       	eor	r27, r27
 122:	f0 0d       	add	r31, r0
 124:	b1 1d       	adc	r27, r1
 126:	63 9f       	mul	r22, r19
 128:	aa 27       	eor	r26, r26
 12a:	f0 0d       	add	r31, r0
 12c:	b1 1d       	adc	r27, r1
 12e:	aa 1f       	adc	r26, r26
 130:	64 9f       	mul	r22, r20
 132:	66 27       	eor	r22, r22
 134:	b0 0d       	add	r27, r0
 136:	a1 1d       	adc	r26, r1
 138:	66 1f       	adc	r22, r22
 13a:	82 9f       	mul	r24, r18
 13c:	22 27       	eor	r18, r18
 13e:	b0 0d       	add	r27, r0
 140:	a1 1d       	adc	r26, r1
 142:	62 1f       	adc	r22, r18
 144:	73 9f       	mul	r23, r19
 146:	b0 0d       	add	r27, r0
 148:	a1 1d       	adc	r26, r1
 14a:	62 1f       	adc	r22, r18
 14c:	83 9f       	mul	r24, r19
 14e:	a0 0d       	add	r26, r0
 150:	61 1d       	adc	r22, r1
 152:	22 1f       	adc	r18, r18
 154:	74 9f       	mul	r23, r20
 156:	33 27       	eor	r19, r19
 158:	a0 0d       	add	r26, r0
 15a:	61 1d       	adc	r22, r1
 15c:	23 1f       	adc	r18, r19
 15e:	84 9f       	mul	r24, r20
 160:	60 0d       	add	r22, r0
 162:	21 1d       	adc	r18, r1
 164:	82 2f       	mov	r24, r18
 166:	76 2f       	mov	r23, r22
 168:	6a 2f       	mov	r22, r26
 16a:	11 24       	eor	r1, r1
 16c:	9f 57       	subi	r25, 0x7F	; 127
 16e:	50 40       	sbci	r21, 0x00	; 0
 170:	9a f0       	brmi	.+38     	; 0x198 <__mulsf3_pse+0x88>
 172:	f1 f0       	breq	.+60     	; 0x1b0 <__mulsf3_pse+0xa0>
 174:	88 23       	and	r24, r24
 176:	4a f0       	brmi	.+18     	; 0x18a <__mulsf3_pse+0x7a>
 178:	ee 0f       	add	r30, r30
 17a:	ff 1f       	adc	r31, r31
 17c:	bb 1f       	adc	r27, r27
 17e:	66 1f       	adc	r22, r22
 180:	77 1f       	adc	r23, r23
 182:	88 1f       	adc	r24, r24
 184:	91 50       	subi	r25, 0x01	; 1
 186:	50 40       	sbci	r21, 0x00	; 0
 188:	a9 f7       	brne	.-22     	; 0x174 <__mulsf3_pse+0x64>
 18a:	9e 3f       	cpi	r25, 0xFE	; 254
 18c:	51 05       	cpc	r21, r1
 18e:	80 f0       	brcs	.+32     	; 0x1b0 <__mulsf3_pse+0xa0>
 190:	0c 94 26 02 	jmp	0x44c	; 0x44c <__fp_inf>
 194:	0c 94 12 02 	jmp	0x424	; 0x424 <__fp_szero>
 198:	5f 3f       	cpi	r21, 0xFF	; 255
 19a:	e4 f3       	brlt	.-8      	; 0x194 <__mulsf3_pse+0x84>
 19c:	98 3e       	cpi	r25, 0xE8	; 232
 19e:	d4 f3       	brlt	.-12     	; 0x194 <__mulsf3_pse+0x84>
 1a0:	86 95       	lsr	r24
 1a2:	77 95       	ror	r23
 1a4:	67 95       	ror	r22
 1a6:	b7 95       	ror	r27
 1a8:	f7 95       	ror	r31
 1aa:	e7 95       	ror	r30
 1ac:	9f 5f       	subi	r25, 0xFF	; 255
 1ae:	c1 f7       	brne	.-16     	; 0x1a0 <__mulsf3_pse+0x90>
 1b0:	fe 2b       	or	r31, r30
 1b2:	88 0f       	add	r24, r24
 1b4:	91 1d       	adc	r25, r1
 1b6:	96 95       	lsr	r25
 1b8:	87 95       	ror	r24
 1ba:	97 f9       	bld	r25, 7
 1bc:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000044c <__fp_inf>:
 44c:	97 f9       	bld	r25, 7
 44e:	9f 67       	ori	r25, 0x7F	; 127
 450:	80 e8       	ldi	r24, 0x80	; 128
 452:	70 e0       	ldi	r23, 0x00	; 0
 454:	60 e0       	ldi	r22, 0x00	; 0
 456:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000460 <__fp_nan>:
 460:	9f ef       	ldi	r25, 0xFF	; 255
 462:	80 ec       	ldi	r24, 0xC0	; 192
 464:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000430 <__fp_pscA>:
 430:	00 24       	eor	r0, r0
 432:	0a 94       	dec	r0
 434:	16 16       	cp	r1, r22
 436:	17 06       	cpc	r1, r23
 438:	18 06       	cpc	r1, r24
 43a:	09 06       	cpc	r0, r25
 43c:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000043e <__fp_pscB>:
 43e:	00 24       	eor	r0, r0
 440:	0a 94       	dec	r0
 442:	12 16       	cp	r1, r18
 444:	13 06       	cpc	r1, r19
 446:	14 06       	cpc	r1, r20
 448:	05 06       	cpc	r0, r21
 44a:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000398 <__fp_round>:
 398:	09 2e       	mov	r0, r25
 39a:	03 94       	inc	r0
 39c:	00 0c       	add	r0, r0
 39e:	11 f4       	brne	.+4      	; 0x3a4 <__fp_round+0xc>
 3a0:	88 23       	and	r24, r24
 3a2:	52 f0       	brmi	.+20     	; 0x3b8 <__fp_round+0x20>
 3a4:	bb 0f       	add	r27, r27
 3a6:	40 f4       	brcc	.+16     	; 0x3b8 <__fp_round+0x20>
 3a8:	bf 2b       	or	r27, r31
 3aa:	11 f4       	brne	.+4      	; 0x3b0 <__fp_round+0x18>
 3ac:	60 ff       	sbrs	r22, 0
 3ae:	04 c0       	rjmp	.+8      	; 0x3b8 <__fp_round+0x20>
 3b0:	6f 5f       	subi	r22, 0xFF	; 255
 3b2:	7f 4f       	sbci	r23, 0xFF	; 255
 3b4:	8f 4f       	sbci	r24, 0xFF	; 255
 3b6:	9f 4f       	sbci	r25, 0xFF	; 255
 3b8:	08 95       	ret
